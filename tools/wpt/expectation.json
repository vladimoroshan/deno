{
  "WebCryptoAPI": {
    "getRandomValues.any.js": true
  },
  "console": {
    "console-is-a-namespace.any.js": true,
    "console-label-conversion.any.js": true,
    "console-namespace-object-class-string.any.js": true,
    "console-tests-historical.any.js": true,
    "idlharness.any.js": false
  },
  "dom": {
    "abort": {
      "event.any.js": true
    },
    "events": {
      "AddEventListenerOptions-signal.any.js": true,
      "Event-dispatch-listener-order.window.js": true,
      "Event-isTrusted.any.js": true,
      "EventListener-addEventListener.sub.window.js": true,
      "EventTarget-constructible.any.js": true,
      "event-global-extra.window.js": true,
      "event-global.worker.js": true,
      "legacy-pre-activation-behavior.window.js": true,
      "relatedTarget.window.js": true,
      "Event-constructors.any.js": [
        "Untitled 2",
        "Untitled 3"
      ]
    },
    "idlharness.any.js": false,
    "idlharness.window.js": false
  },
  "encoding": {
    "api-basics.any.js": true,
    "api-invalid-label.any.js": true,
    "api-replacement-encodings.any.js": true,
    "api-surrogates-utf8.any.js": true,
    "encodeInto.any.js": [
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 4, filler random",
      "encodeInto() into ArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler 0",
      "encodeInto() into ArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler 0",
      "encodeInto() into ArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler 128",
      "encodeInto() into ArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler 128",
      "encodeInto() into ArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler random",
      "encodeInto() into ArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler random",
      "encodeInto() into ArrayBuffer with A\udf06 and destination length 4, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 0, filler 0",
      "encodeInto() into ArrayBuffer with A\udf06 and destination length 4, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 4, filler 0",
      "encodeInto() into ArrayBuffer with A\udf06 and destination length 4, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 0, filler 128",
      "encodeInto() into ArrayBuffer with A\udf06 and destination length 4, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 4, filler 128",
      "encodeInto() into ArrayBuffer with A\udf06 and destination length 4, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 0, filler random",
      "encodeInto() into ArrayBuffer with A\udf06 and destination length 4, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 4, filler random",
      "encodeInto() and a detached output buffer",
      "Invalid encodeInto() destination: DataView, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Int8Array, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Int16Array, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Int32Array, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Uint16Array, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Uint32Array, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Uint8ClampedArray, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Float32Array, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: Float64Array, backed by: SharedArrayBuffer",
      "Invalid encodeInto() destination: SharedArrayBuffer"
    ],
    "idlharness.any.js": false,
    "iso-2022-jp-decoder.any.js": false,
    "legacy-mb-schinese": {
      "gb18030": {
        "gb18030-decoder.any.js": true
      },
      "gbk": {
        "gbk-decoder.any.js": true
      }
    },
    "replacement-encodings.any.js": false,
    "streams": {
      "backpressure.any.js": false,
      "decode-attributes.any.js": false,
      "decode-bad-chunks.any.js": false,
      "decode-ignore-bom.any.js": false,
      "decode-incomplete-input.any.js": false,
      "decode-non-utf8.any.js": false,
      "decode-split-character.any.js": false,
      "decode-utf8.any.js": false,
      "encode-bad-chunks.any.js": false,
      "encode-utf8.any.js": false,
      "readable-writable-properties.any.js": false,
      "realms.window.js": false
    },
    "textdecoder-byte-order-marks.any.js": true,
    "textdecoder-copy.any.js": [
      "Modify buffer after passing it in (ArrayBuffer)",
      "Modify buffer after passing it in (SharedArrayBuffer)"
    ],
    "textdecoder-fatal-single-byte.any.js": true,
    "textdecoder-fatal-streaming.any.js": [
      "Fatal flag, streaming cases"
    ],
    "textdecoder-fatal.any.js": true,
    "textdecoder-ignorebom.any.js": true,
    "textdecoder-labels.any.js": [
      "cseucpkdfmtjapanese => EUC-JP",
      "euc-jp => EUC-JP",
      "x-euc-jp => EUC-JP",
      "csiso2022jp => ISO-2022-JP",
      "iso-2022-jp => ISO-2022-JP",
      "csshiftjis => Shift_JIS",
      "ms932 => Shift_JIS",
      "ms_kanji => Shift_JIS",
      "shift-jis => Shift_JIS",
      "shift_jis => Shift_JIS",
      "sjis => Shift_JIS",
      "windows-31j => Shift_JIS",
      "x-sjis => Shift_JIS",
      "cseuckr => EUC-KR",
      "csksc56011987 => EUC-KR",
      "euc-kr => EUC-KR",
      "iso-ir-149 => EUC-KR",
      "korean => EUC-KR",
      "ks_c_5601-1987 => EUC-KR",
      "ks_c_5601-1989 => EUC-KR",
      "ksc5601 => EUC-KR",
      "ksc_5601 => EUC-KR",
      "windows-949 => EUC-KR",
      "x-user-defined => x-user-defined"
    ],
    "textdecoder-streaming.any.js": false,
    "textdecoder-utf16-surrogates.any.js": true,
    "textencoder-constructor-non-utf.any.js": [
      "Encoding argument supported for decode: EUC-JP",
      "Encoding argument supported for decode: ISO-2022-JP",
      "Encoding argument supported for decode: Shift_JIS",
      "Encoding argument supported for decode: EUC-KR",
      "Encoding argument supported for decode: x-user-defined"
    ],
    "textencoder-utf16-surrogates.any.js": true,
    "unsupported-encodings.any.js": false
  },
  "hr-time": {
    "monotonic-clock.any.js": true,
    "basic.any.js": [
      "Performance interface extends EventTarget."
    ],
    "idlharness.any.js": false
  },
  "streams": {
    "idlharness.any.js": false,
    "piping": {
      "abort.any.js": [
        "a signal argument 'null' should cause pipeTo() to reject",
        "a signal argument 'AbortSignal' should cause pipeTo() to reject",
        "a signal argument 'true' should cause pipeTo() to reject",
        "a signal argument '-1' should cause pipeTo() to reject",
        "a signal argument '[object AbortSignal]' should cause pipeTo() to reject"
      ],
      "close-propagation-backward.any.js": [
        "Closing must be propagated backward: starts closed; preventCancel = null (falsy); fulfilled cancel promise",
        "Closing must be propagated backward: starts closed; preventCancel = 0 (falsy); fulfilled cancel promise",
        "Closing must be propagated backward: starts closed; preventCancel = -0 (falsy); fulfilled cancel promise",
        "Closing must be propagated backward: starts closed; preventCancel = NaN (falsy); fulfilled cancel promise",
        "Closing must be propagated backward: starts closed; preventCancel =  (falsy); fulfilled cancel promise",
        "Closing must be propagated backward: starts closed; preventCancel = a (truthy)",
        "Closing must be propagated backward: starts closed; preventCancel = 1 (truthy)",
        "Closing must be propagated backward: starts closed; preventCancel = Symbol() (truthy)",
        "Closing must be propagated backward: starts closed; preventCancel = [object Object] (truthy)"
      ],
      "close-propagation-forward.any.js": [
        "Closing must be propagated forward: starts closed; preventClose = null (falsy); fulfilled close promise",
        "Closing must be propagated forward: starts closed; preventClose = 0 (falsy); fulfilled close promise",
        "Closing must be propagated forward: starts closed; preventClose = -0 (falsy); fulfilled close promise",
        "Closing must be propagated forward: starts closed; preventClose = NaN (falsy); fulfilled close promise",
        "Closing must be propagated forward: starts closed; preventClose =  (falsy); fulfilled close promise",
        "Closing must be propagated forward: starts closed; preventClose = a (truthy)",
        "Closing must be propagated forward: starts closed; preventClose = 1 (truthy)",
        "Closing must be propagated forward: starts closed; preventClose = Symbol() (truthy)",
        "Closing must be propagated forward: starts closed; preventClose = [object Object] (truthy)"
      ],
      "error-propagation-backward.any.js": [
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = null (falsy); fulfilled cancel promise",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 0 (falsy); fulfilled cancel promise",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = -0 (falsy); fulfilled cancel promise",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = NaN (falsy); fulfilled cancel promise",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel =  (falsy); fulfilled cancel promise",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = a (truthy)",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = 1 (truthy)",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = Symbol() (truthy)",
        "Errors must be propagated backward: becomes errored before piping due to write; preventCancel = [object Object] (truthy)"
      ],
      "error-propagation-forward.any.js": [
        "Errors must be propagated forward: starts errored; preventAbort = null (falsy); fulfilled abort promise",
        "Errors must be propagated forward: starts errored; preventAbort = 0 (falsy); fulfilled abort promise",
        "Errors must be propagated forward: starts errored; preventAbort = -0 (falsy); fulfilled abort promise",
        "Errors must be propagated forward: starts errored; preventAbort = NaN (falsy); fulfilled abort promise",
        "Errors must be propagated forward: starts errored; preventAbort =  (falsy); fulfilled abort promise",
        "Errors must be propagated forward: starts errored; preventAbort = a (truthy)",
        "Errors must be propagated forward: starts errored; preventAbort = 1 (truthy)",
        "Errors must be propagated forward: starts errored; preventAbort = Symbol() (truthy)",
        "Errors must be propagated forward: starts errored; preventAbort = [object Object] (truthy)"
      ],
      "flow-control.any.js": true,
      "general.any.js": [
        "pipeTo must check the brand of its ReadableStream this value",
        "pipeTo must check the brand of its WritableStream argument",
        "pipeTo() promise should resolve if null is passed"
      ],
      "multiple-propagation.any.js": true,
      "pipe-through.any.js": true,
      "then-interception.any.js": true,
      "throwing-options.any.js": false,
      "transform-streams.any.js": true
    },
    "queuing-strategies-size-function-per-global.window.js": false,
    "queuing-strategies.any.js": true,
    "readable-byte-streams": {
      "bad-buffers-and-views.any.js": [
        "ReadableStream with byte source: respond() throws if the BYOB request's buffer has been detached (in the readable state)",
        "ReadableStream with byte source: respond() throws if the BYOB request's buffer has been detached (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has been detached (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer is zero-length (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view is zero-length on a non-zero-length buffer (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has been detached (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer is zero-length (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view is zero-length on a non-zero-length buffer (in the closed state)",
        "ReadableStream with byte source: read()ing from a closed stream still transfers the buffer",
        "ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer",
        "ReadableStream with byte source: reading into an already-detached buffer rejects",
        "ReadableStream with byte source: reading into a zero-length buffer rejects",
        "ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects"
      ],
      "construct-byob-request.any.js": false,
      "general.any.js": [
        "getReader({mode: \"byob\"}) throws on non-bytes streams",
        "ReadableStream with byte source can be constructed with no errors",
        "getReader({mode}) must perform ToString()",
        "ReadableStream with byte source: autoAllocateChunkSize cannot be 0",
        "ReadableStreamBYOBReader can be constructed directly",
        "ReadableStreamBYOBReader constructor requires a ReadableStream argument",
        "ReadableStreamBYOBReader constructor requires an unlocked ReadableStream",
        "ReadableStreamBYOBReader constructor requires a ReadableStream with type \"bytes\"",
        "ReadableStream with byte source: getReader() with mode set to byob, then releaseLock()",
        "ReadableStream with byte source: Test that closing a stream does not release a BYOB reader automatically",
        "ReadableStream with byte source: Test that erroring a stream does not release a BYOB reader automatically",
        "ReadableStream with byte source: autoAllocateChunkSize",
        "ReadableStream with byte source: Mix of auto allocate and BYOB",
        "ReadableStream with byte source: enqueue(), read(view) partially, then read()",
        "ReadableStream with byte source: Respond to pull() by enqueue()",
        "ReadableStream with byte source: Respond to pull() by enqueue() asynchronously",
        "ReadableStream with byte source: Respond to multiple pull() by separate enqueue()",
        "ReadableStream with byte source: read(view), then respond()",
        "ReadableStream with byte source: read(view), then respond() with a transferred ArrayBuffer",
        "ReadableStream with byte source: read(view), then respond() with too big value",
        "ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view)",
        "ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)",
        "ReadableStream with byte source: getReader(), read(view), then cancel()",
        "ReadableStream with byte source: cancel() with partially filled pending pull() request",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view",
        "ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views",
        "ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array",
        "ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array",
        "ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail",
        "ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array",
        "ReadableStream with byte source: read(view), then respond() and close() in pull()",
        "ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls",
        "ReadableStream with byte source: read() twice, then enqueue() twice",
        "ReadableStream with byte source: Multiple read(view), close() and respond()",
        "ReadableStream with byte source: Multiple read(view), big enqueue()",
        "ReadableStream with byte source: Multiple read(view) and multiple enqueue()",
        "ReadableStream with byte source: read(view) with passing undefined as view must fail",
        "ReadableStream with byte source: read(view) with passing an empty object as view must fail",
        "ReadableStream with byte source: Even read(view) with passing ArrayBufferView like object as view must fail",
        "ReadableStream with byte source: read(view) on an errored stream",
        "ReadableStream with byte source: read(view), then error()",
        "ReadableStream with byte source: Throwing in pull function must error the stream",
        "ReadableStream with byte source: Throwing in pull in response to read() must be ignored if the stream is errored in it",
        "ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream",
        "ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it",
        "calling respond() twice on the same byobRequest should throw",
        "calling respondWithNewView() twice on the same byobRequest should throw",
        "calling respond(0) twice on the same byobRequest should throw even when closed",
        "pull() resolving should not make releaseLock() possible",
        "ReadableStream with byte source: default reader + autoAllocateChunkSize + byobRequest interaction"
      ]
    },
    "readable-streams": {
      "async-iterator.any.js": [
        "Async iterator instances should have the correct list of properties",
        "values() throws if there's already a lock",
        "return() should unlock the stream synchronously when preventCancel = false",
        "return() should unlock the stream synchronously when preventCancel = true",
        "Async-iterating a pull source manually",
        "Cancellation behavior when throwing inside loop body; preventCancel = false",
        "Cancellation behavior when throwing inside loop body; preventCancel = true",
        "Cancellation behavior when breaking inside loop body; preventCancel = false",
        "Cancellation behavior when breaking inside loop body; preventCancel = true",
        "Cancellation behavior when returning inside loop body; preventCancel = false",
        "Cancellation behavior when returning inside loop body; preventCancel = true",
        "Cancellation behavior when manually calling return(); preventCancel = false",
        "Cancellation behavior when manually calling return(); preventCancel = true",
        "next() rejects if the stream errors",
        "return() does not rejects if the stream has not errored yet",
        "return() rejects if the stream has errored",
        "next() that succeeds; next() that reports an error; next()"
      ],
      "bad-strategies.any.js": true,
      "bad-underlying-sources.any.js": true,
      "cancel.any.js": false,
      "constructor.any.js": false,
      "count-queuing-strategy-integration.any.js": true,
      "default-reader.any.js": true,
      "floating-point-total-queue-size.any.js": true,
      "garbage-collection.any.js": true,
      "general.any.js": true,
      "patched-global.any.js": true,
      "reentrant-strategies.any.js": true,
      "tee.any.js": true,
      "templated.any.js": [
        "ReadableStream (empty) reader: canceling via the stream should fail"
      ]
    },
    "transform-streams": {
      "backpressure.any.js": true,
      "errors.any.js": true,
      "flush.any.js": true,
      "general.any.js": true,
      "lipfuzz.any.js": true,
      "patched-global.any.js": false,
      "properties.any.js": true,
      "reentrant-strategies.any.js": true,
      "strategies.any.js": true,
      "terminate.any.js": [
        "controller.terminate() inside flush() should not prevent writer.close() from succeeding"
      ]
    },
    "writable-streams": {
      "aborting.any.js": false,
      "bad-strategies.any.js": [
        "reject any non-function value for strategy.size",
        "Writable stream: invalid size beats invalid highWaterMark"
      ],
      "bad-underlying-sinks.any.js": true,
      "byte-length-queuing-strategy.any.js": true,
      "close.any.js": false,
      "constructor.any.js": [
        "underlyingSink argument should be converted after queuingStrategy argument",
        "WritableStreamDefaultController constructor should throw",
        "WritableStreamDefaultController constructor should throw when passed an initialised WritableStream",
        "WritableStreamDefaultWriter should throw unless passed a WritableStream"
      ],
      "count-queuing-strategy.any.js": true,
      "error.any.js": true,
      "floating-point-total-queue-size.any.js": true,
      "general.any.js": true,
      "properties.any.js": true,
      "reentrant-strategy.any.js": true,
      "start.any.js": true,
      "write.any.js": true
    }
  },
  "user-timing": {
    "buffered-flag.any.js": false,
    "case-sensitivity.any.js": false,
    "clear_all_marks.any.js": true,
    "clear_all_measures.any.js": true,
    "clear_non_existent_mark.any.js": true,
    "clear_non_existent_measure.any.js": true,
    "clear_one_mark.any.js": true,
    "clear_one_measure.any.js": true,
    "entry_type.any.js": true,
    "idlharness.any.js": false,
    "mark-entry-constructor.any.js": true,
    "mark-errors.any.js": true,
    "mark-l3.any.js": false,
    "mark-measure-return-objects.any.js": true,
    "mark.any.js": true,
    "measure-l3.any.js": true,
    "measure-with-dict.any.js": [
      "measure entries' detail and start/end are customizable"
    ],
    "measure_syntax_err.any.js": true,
    "structured-serialize-detail.any.js": true,
    "supported-usertiming-types.any.js": false,
    "user_timing_exists.any.js": true
  },
  "wasm": {
    "jsapi": {
      "constructor": {
        "compile.any.js": true,
        "instantiate-bad-imports.any.js": false,
        "instantiate.any.js": [
          "Synchronous options handling: Buffer argument"
        ],
        "multi-value.any.js": true,
        "toStringTag.any.js": true,
        "validate.any.js": true
      },
      "global": {
        "constructor.any.js": true,
        "toString.any.js": true,
        "type.tentative.any.js": false,
        "value-get-set.any.js": true,
        "valueOf.any.js": true
      },
      "idlharness.any.js": false,
      "instance": {
        "constructor-bad-imports.any.js": false,
        "constructor-caching.any.js": true,
        "constructor.any.js": true,
        "exports.any.js": [
          "Setting (sloppy mode)"
        ],
        "toString.any.js": true
      },
      "interface.any.js": [
        "WebAssembly: property descriptor"
      ],
      "memory": {
        "buffer.any.js": [
          "Setting (sloppy mode)"
        ],
        "constructor.any.js": true,
        "grow.any.js": [
          "Growing shared memory does not detach old buffer"
        ],
        "toString.any.js": true,
        "type.tentative.any.js": false
      },
      "module": {
        "constructor.any.js": true,
        "customSections.any.js": true,
        "exports.any.js": true,
        "imports.any.js": true,
        "toString.any.js": true
      },
      "prototypes.any.js": false,
      "table": {
        "constructor.any.js": true,
        "get-set.any.js": true,
        "grow.any.js": true,
        "length.any.js": [
          "Setting (sloppy mode)"
        ],
        "toString.any.js": true
      }
    },
    "serialization": {
      "arraybuffer": {
        "transfer.window.js": false
      },
      "module": {
        "nested-worker-success.any.js": false,
        "serialization-via-idb.any.js": false,
        "serialization-via-notifications-api.any.js": false
      }
    },
    "webapi": {
      "abort.any.js": false,
      "body.any.js": true,
      "contenttype.any.js": [
        "Response with Content-Type \"application/wasm\": compileStreaming",
        "Response with Content-Type \"application/wasm\": instantiateStreaming",
        "Response with Content-Type \"APPLICATION/wasm\": compileStreaming",
        "Response with Content-Type \"APPLICATION/wasm\": instantiateStreaming",
        "Response with Content-Type \"APPLICATION/WASM\": compileStreaming",
        "Response with Content-Type \"APPLICATION/WASM\": instantiateStreaming"
      ],
      "empty-body.any.js": false,
      "historical.any.js": false,
      "idlharness.any.js": false,
      "instantiateStreaming-bad-imports.any.js": [
        "Importing a function with an incorrectly-typed value: undefined",
        "Importing a function with an incorrectly-typed value: null",
        "Importing a function with an incorrectly-typed value: true",
        "Importing a function with an incorrectly-typed value: \"\"",
        "Importing a function with an incorrectly-typed value: symbol \"Symbol()\"",
        "Importing a function with an incorrectly-typed value: 1",
        "Importing a function with an incorrectly-typed value: 0.1",
        "Importing a function with an incorrectly-typed value: NaN",
        "Importing a function with an incorrectly-typed value: object \"[object Object]\"",
        "Importing an i32 global with an incorrectly-typed value: undefined",
        "Importing an i32 global with an incorrectly-typed value: null",
        "Importing an i32 global with an incorrectly-typed value: true",
        "Importing an i32 global with an incorrectly-typed value: \"\"",
        "Importing an i32 global with an incorrectly-typed value: symbol \"Symbol()\"",
        "Importing an i32 global with an incorrectly-typed value: plain object",
        "Importing an i32 global with an incorrectly-typed value: WebAssembly.Global",
        "Importing an i32 global with an incorrectly-typed value: WebAssembly.Global.prototype",
        "Importing an i32 global with an incorrectly-typed value: Object.create(WebAssembly.Global.prototype)",
        "Importing an i32 global with an incorrectly-typed value: BigInt",
        "Importing an i32 global with an incorrectly-typed value: WebAssembly.Global object (wrong value type)",
        "Importing an i64 global with an incorrectly-typed value: undefined",
        "Importing an i64 global with an incorrectly-typed value: null",
        "Importing an i64 global with an incorrectly-typed value: true",
        "Importing an i64 global with an incorrectly-typed value: \"\"",
        "Importing an i64 global with an incorrectly-typed value: symbol \"Symbol()\"",
        "Importing an i64 global with an incorrectly-typed value: plain object",
        "Importing an i64 global with an incorrectly-typed value: WebAssembly.Global",
        "Importing an i64 global with an incorrectly-typed value: WebAssembly.Global.prototype",
        "Importing an i64 global with an incorrectly-typed value: Object.create(WebAssembly.Global.prototype)",
        "Importing an i64 global with an incorrectly-typed value: Number",
        "Importing an i64 global with an incorrectly-typed value: WebAssembly.Global object (wrong value type)",
        "Importing an f32 global with an incorrectly-typed value: undefined",
        "Importing an f32 global with an incorrectly-typed value: null",
        "Importing an f32 global with an incorrectly-typed value: true",
        "Importing an f32 global with an incorrectly-typed value: \"\"",
        "Importing an f32 global with an incorrectly-typed value: symbol \"Symbol()\"",
        "Importing an f32 global with an incorrectly-typed value: plain object",
        "Importing an f32 global with an incorrectly-typed value: WebAssembly.Global",
        "Importing an f32 global with an incorrectly-typed value: WebAssembly.Global.prototype",
        "Importing an f32 global with an incorrectly-typed value: Object.create(WebAssembly.Global.prototype)",
        "Importing an f32 global with an incorrectly-typed value: BigInt",
        "Importing an f32 global with an incorrectly-typed value: WebAssembly.Global object (wrong value type)",
        "Importing an f64 global with an incorrectly-typed value: undefined",
        "Importing an f64 global with an incorrectly-typed value: null",
        "Importing an f64 global with an incorrectly-typed value: true",
        "Importing an f64 global with an incorrectly-typed value: \"\"",
        "Importing an f64 global with an incorrectly-typed value: symbol \"Symbol()\"",
        "Importing an f64 global with an incorrectly-typed value: plain object",
        "Importing an f64 global with an incorrectly-typed value: WebAssembly.Global",
        "Importing an f64 global with an incorrectly-typed value: WebAssembly.Global.prototype",
        "Importing an f64 global with an incorrectly-typed value: Object.create(WebAssembly.Global.prototype)",
        "Importing an f64 global with an incorrectly-typed value: BigInt",
        "Importing an f64 global with an incorrectly-typed value: WebAssembly.Global object (wrong value type)",
        "Importing an i32 mutable global with a primitive value",
        "Importing an i32 mutable global with an immutable Global object",
        "Importing an i64 mutable global with a primitive value",
        "Importing an i64 mutable global with an immutable Global object",
        "Importing an f32 mutable global with a primitive value",
        "Importing an f32 mutable global with an immutable Global object",
        "Importing an f64 mutable global with a primitive value",
        "Importing an f64 mutable global with an immutable Global object",
        "Importing memory with an incorrectly-typed value: undefined",
        "Importing memory with an incorrectly-typed value: null",
        "Importing memory with an incorrectly-typed value: true",
        "Importing memory with an incorrectly-typed value: \"\"",
        "Importing memory with an incorrectly-typed value: symbol \"Symbol()\"",
        "Importing memory with an incorrectly-typed value: 1",
        "Importing memory with an incorrectly-typed value: 0.1",
        "Importing memory with an incorrectly-typed value: NaN",
        "Importing memory with an incorrectly-typed value: plain object",
        "Importing memory with an incorrectly-typed value: WebAssembly.Memory",
        "Importing memory with an incorrectly-typed value: WebAssembly.Memory.prototype",
        "Importing memory with an incorrectly-typed value: Object.create(WebAssembly.Memory.prototype)",
        "Importing memory with an incorrectly-typed value: WebAssembly.Memory object (too large)",
        "Importing table with an incorrectly-typed value: undefined",
        "Importing table with an incorrectly-typed value: null",
        "Importing table with an incorrectly-typed value: true",
        "Importing table with an incorrectly-typed value: \"\"",
        "Importing table with an incorrectly-typed value: symbol \"Symbol()\"",
        "Importing table with an incorrectly-typed value: 1",
        "Importing table with an incorrectly-typed value: 0.1",
        "Importing table with an incorrectly-typed value: NaN",
        "Importing table with an incorrectly-typed value: plain object",
        "Importing table with an incorrectly-typed value: WebAssembly.Table",
        "Importing table with an incorrectly-typed value: WebAssembly.Table.prototype",
        "Importing table with an incorrectly-typed value: Object.create(WebAssembly.Table.prototype)",
        "Importing table with an incorrectly-typed value: WebAssembly.Table object (too large)"
      ],
      "instantiateStreaming.any.js": false,
      "invalid-args.any.js": true,
      "invalid-code.any.js": false,
      "modified-contenttype.any.js": [
        "compileStreaming with Content-Type set late",
        "instantiateStreaming with Content-Type set late"
      ],
      "origin.sub.any.js": true,
      "rejected-arg.any.js": true,
      "status.any.js": true
    }
  },
  "WebIDL": {
    "ecmascript-binding": {
      "es-exceptions": {
        "DOMException-constants.any.js": true,
        "DOMException-constructor-and-prototype.any.js": true,
        "DOMException-constructor-behavior.any.js": true,
        "DOMException-custom-bindings.any.js": [
          "does not inherit from Error: class-side"
        ]
      }
    }
  },
  "url": {
    "historical.any.js": [
      "<a> and <area>.searchParams should be undefined"
    ],
    "idlharness.any.js": false,
    "url-constructor.any.js": [
      "Parsing: <http://example.com/\ud800𐟾\udfff﷐﷏﷯ﷰ￾￿?\ud800𐟾\udfff﷐﷏﷯ﷰ￾￿> against <about:blank>",
      "Parsing: </> against <file://h/C:/a/b>",
      "Parsing: <file:\\\\//> against <about:blank>",
      "Parsing: <file:\\\\\\\\> against <about:blank>",
      "Parsing: <file:\\\\\\\\?fox> against <about:blank>",
      "Parsing: <file:\\\\\\\\#guppy> against <about:blank>",
      "Parsing: <file://spider///> against <about:blank>",
      "Parsing: <file:\\\\localhost//> against <about:blank>",
      "Parsing: <file://\\/localhost//cat> against <about:blank>",
      "Parsing: <file://localhost//a//../..//> against <about:blank>",
      "Parsing: </////mouse> against <file:///elephant>",
      "Parsing: <\\/localhost//pig> against <file://lion/>",
      "Parsing: <//localhost//pig> against <file://lion/>",
      "Parsing: </..//localhost//pig> against <file://lion/>",
      "Parsing: <C|> against <file://host/dir/file>",
      "Parsing: <C|> against <file://host/D:/dir1/dir2/file>",
      "Parsing: <C|#> against <file://host/dir/file>",
      "Parsing: <C|?> against <file://host/dir/file>",
      "Parsing: <C|/> against <file://host/dir/file>",
      "Parsing: <C|\n/> against <file://host/dir/file>",
      "Parsing: <C|\\> against <file://host/dir/file>",
      "Parsing: </c:/foo/bar> against <file://host/path>",
      "Parsing: <file://example.net/C:/> against <about:blank>",
      "Parsing: <file://1.2.3.4/C:/> against <about:blank>",
      "Parsing: <file://[1::8]/C:/> against <about:blank>",
      "Parsing: <file://localhost//a//../..//foo> against <about:blank>",
      "Parsing: <file://localhost////foo> against <about:blank>",
      "Parsing: <file:////foo> against <about:blank>",
      "Parsing: <file:////one/two> against <file:///>",
      "Parsing: <////one/two> against <file:///>",
      "Parsing: <file:///.//> against <file:////>",
      "Parsing: <file:.//p> against <about:blank>",
      "Parsing: <file:/.//p> against <about:blank>",
      "Parsing: <non-spec:/.//> against <about:blank>",
      "Parsing: <non-spec:/..//> against <about:blank>",
      "Parsing: <non-spec:/a/..//> against <about:blank>",
      "Parsing: <non-spec:/.//path> against <about:blank>",
      "Parsing: <non-spec:/..//path> against <about:blank>",
      "Parsing: <non-spec:/a/..//path> against <about:blank>",
      "Parsing: </.//path> against <non-spec:/p>",
      "Parsing: </..//path> against <non-spec:/p>",
      "Parsing: <..//path> against <non-spec:/p>",
      "Parsing: <a/..//path> against <non-spec:/p>",
      "Parsing: <> against <non-spec:/..//p>",
      "Parsing: <path> against <non-spec:/..//p>"
    ],
    "url-origin.any.js": [
      "Origin parsing: <http://example.com/\ud800𐟾\udfff﷐﷏﷯ﷰ￾￿?\ud800𐟾\udfff﷐﷏﷯ﷰ￾￿> against <about:blank>"
    ],
    "url-searchparams.any.js": true,
    "url-setters-stripping.any.js": [
      "Setting protocol with leading U+0000 (https:)",
      "Setting protocol with U+0000 before inserted colon (https:)",
      "Setting port with leading U+0000 (https:)",
      "Setting pathname with trailing U+0000 (https:)",
      "Setting protocol with leading U+001F (https:)",
      "Setting protocol with U+001F before inserted colon (https:)",
      "Setting port with leading U+001F (https:)",
      "Setting pathname with trailing U+001F (https:)",
      "Setting protocol with leading U+0000 (wpt++:)",
      "Setting protocol with U+0000 before inserted colon (wpt++:)",
      "Setting port with leading U+0000 (wpt++:)",
      "Setting pathname with trailing U+0000 (wpt++:)",
      "Setting protocol with leading U+001F (wpt++:)",
      "Setting protocol with U+001F before inserted colon (wpt++:)",
      "Setting port with leading U+001F (wpt++:)",
      "Setting pathname with trailing U+001F (wpt++:)"
    ],
    "url-tojson.any.js": true,
    "urlencoded-parser.any.js": [
      "request.formData() with input: ﻿test=﻿",
      "response.formData() with input: ﻿test=﻿",
      "request.formData() with input: †&†=x",
      "response.formData() with input: †&†=x",
      "request.formData() with input: _charset_=windows-1252&test=%C2x",
      "response.formData() with input: _charset_=windows-1252&test=%C2x",
      "request.formData() with input: %=a",
      "response.formData() with input: %=a",
      "request.formData() with input: %a=a",
      "response.formData() with input: %a=a",
      "request.formData() with input: %a_=a",
      "response.formData() with input: %a_=a",
      "request.formData() with input: id=0&value=%",
      "response.formData() with input: id=0&value=%",
      "request.formData() with input: b=%2sf%2a",
      "response.formData() with input: b=%2sf%2a",
      "request.formData() with input: b=%2%2af%2a",
      "response.formData() with input: b=%2%2af%2a",
      "request.formData() with input: b=%%2a",
      "response.formData() with input: b=%%2a"
    ],
    "urlsearchparams-append.any.js": true,
    "urlsearchparams-constructor.any.js": [
      "URLSearchParams constructor, empty string as argument",
      "Construct with 2 unpaired surrogates (no trailing)",
      "Construct with 3 unpaired surrogates (no leading)",
      "Construct with object with NULL, non-ASCII, and surrogate keys"
    ],
    "urlsearchparams-delete.any.js": true,
    "urlsearchparams-foreach.any.js": [
      "For-of Check",
      "delete next param during iteration",
      "delete current param during iteration",
      "delete every param seen during iteration"
    ],
    "urlsearchparams-get.any.js": true,
    "urlsearchparams-getall.any.js": true,
    "urlsearchparams-has.any.js": true,
    "urlsearchparams-set.any.js": true,
    "urlsearchparams-sort.any.js": true,
    "urlsearchparams-stringifier.any.js": true
  },
  "fetch": {
    "api": {
      "request": {
        "request-structure.any.js": [
          "Check destination attribute",
          "Check referrer attribute",
          "Check referrerPolicy attribute",
          "Check mode attribute",
          "Check credentials attribute",
          "Check cache attribute",
          "Check redirect attribute",
          "Check integrity attribute",
          "Check isReloadNavigation attribute",
          "Check isHistoryNavigation attribute"
        ]
      }
    }
  },
  "FileAPI": {
    "blob": {
      "Blob-array-buffer.any.js": true,
      "Blob-stream.any.js": true,
      "Blob-text.any.js": true,
      "Blob-constructor.any.js": [
        "Blob interface object",
        "Passing a FrozenArray as the blobParts array should work (FrozenArray<MessagePort>)."
      ],
      "Blob-slice-overflow.any.js": true,
      "Blob-slice.any.js": true
    },
    "file": {
      "File-constructor.any.js": true
    }
  },
  "html": {
    "webappapis": {
      "atob": {
        "base64.any.js": true
      },
      "timers": {
        "cleartimeout-clearinterval.any.js": true,
        "missing-timeout-setinterval.any.js": true,
        "negative-setinterval.any.js": true,
        "negative-settimeout.any.js": true,
        "type-long-setinterval.any.js": true,
        "type-long-settimeout.any.js": true
      },
      "microtask-queuing": {
        "queue-microtask-exceptions.any.js": true,
        "queue-microtask.any.js": true
      }
    }
  }
}
