{
  "WebCryptoAPI": {
    "getRandomValues.any.html": true,
    "derive_bits_keys": {
      "ecdh_bits.https.any.html": false,
      "ecdh_keys.https.any.html": false,
      "hkdf.https.any.html?1-1000": false,
      "hkdf.https.any.html?1001-2000": false,
      "hkdf.https.any.html?2001-3000": false,
      "hkdf.https.any.html?3001-last": false,
      "pbkdf2.https.any.html?1-1000": false,
      "pbkdf2.https.any.html?1001-2000": false,
      "pbkdf2.https.any.html?2001-3000": false,
      "pbkdf2.https.any.html?3001-4000": false,
      "pbkdf2.https.any.html?4001-5000": false,
      "pbkdf2.https.any.html?5001-6000": false,
      "pbkdf2.https.any.html?6001-7000": false,
      "pbkdf2.https.any.html?7001-8000": false,
      "pbkdf2.https.any.html?8001-last": false
    },
    "digest": {
      "digest.https.any.html": true
    },
    "encrypt_decrypt": {
      "aes_cbc.https.any.html": false,
      "aes_ctr.https.any.html": false,
      "aes_gcm.https.any.html": false,
      "rsa.https.any.html": false
    },
    "generateKey": {
      "failures_AES-CBC.https.any.html": false,
      "failures_AES-CTR.https.any.html": false,
      "failures_AES-GCM.https.any.html": false,
      "failures_AES-KW.https.any.html": false,
      "failures_ECDH.https.any.html": false,
      "failures_ECDSA.https.any.html": false,
      "failures_HMAC.https.any.html": false,
      "failures_RSA-OAEP.https.any.html": false,
      "failures_RSA-PSS.https.any.html": false,
      "failures_RSASSA-PKCS1-v1_5.https.any.html": false,
      "successes_AES-CBC.https.any.html": false,
      "successes_AES-CTR.https.any.html": false,
      "successes_AES-GCM.https.any.html": false,
      "successes_AES-KW.https.any.html": false,
      "successes_ECDH.https.any.html": false,
      "successes_ECDSA.https.any.html": false,
      "successes_HMAC.https.any.html": false,
      "successes_RSA-OAEP.https.any.html?1-10": false,
      "successes_RSA-OAEP.https.any.html?101-110": false,
      "successes_RSA-OAEP.https.any.html?11-20": false,
      "successes_RSA-OAEP.https.any.html?111-120": false,
      "successes_RSA-OAEP.https.any.html?121-130": false,
      "successes_RSA-OAEP.https.any.html?131-140": false,
      "successes_RSA-OAEP.https.any.html?141-150": false,
      "successes_RSA-OAEP.https.any.html?151-last": false,
      "successes_RSA-OAEP.https.any.html?21-30": false,
      "successes_RSA-OAEP.https.any.html?31-40": false,
      "successes_RSA-OAEP.https.any.html?41-50": false,
      "successes_RSA-OAEP.https.any.html?51-60": false,
      "successes_RSA-OAEP.https.any.html?61-70": false,
      "successes_RSA-OAEP.https.any.html?71-80": false,
      "successes_RSA-OAEP.https.any.html?81-90": false,
      "successes_RSA-OAEP.https.any.html?91-100": false,
      "successes_RSA-PSS.https.any.html?1-10": false,
      "successes_RSA-PSS.https.any.html?11-20": false,
      "successes_RSA-PSS.https.any.html?21-30": false,
      "successes_RSA-PSS.https.any.html?31-last": false,
      "successes_RSASSA-PKCS1-v1_5.https.any.html?1-10": false,
      "successes_RSASSA-PKCS1-v1_5.https.any.html?11-20": false,
      "successes_RSASSA-PKCS1-v1_5.https.any.html?21-30": false,
      "successes_RSASSA-PKCS1-v1_5.https.any.html?31-last": false
    },
    "historical.any.html": [
      "Non-secure context window does not have access to crypto.subtle",
      "Non-secure context window does not have access to SubtleCrypto"
    ],
    "idlharness.https.any.html": [
      "CryptoKey interface: existence and properties of interface object",
      "CryptoKey interface object length",
      "CryptoKey interface object name",
      "CryptoKey interface: existence and properties of interface prototype object",
      "CryptoKey interface: existence and properties of interface prototype object's \"constructor\" property",
      "CryptoKey interface: existence and properties of interface prototype object's @@unscopables property",
      "CryptoKey interface: attribute type",
      "CryptoKey interface: attribute extractable",
      "CryptoKey interface: attribute algorithm",
      "CryptoKey interface: attribute usages",
      "SubtleCrypto interface: operation encrypt(AlgorithmIdentifier, CryptoKey, BufferSource)",
      "SubtleCrypto interface: operation decrypt(AlgorithmIdentifier, CryptoKey, BufferSource)",
      "SubtleCrypto interface: operation sign(AlgorithmIdentifier, CryptoKey, BufferSource)",
      "SubtleCrypto interface: operation verify(AlgorithmIdentifier, CryptoKey, BufferSource, BufferSource)",
      "SubtleCrypto interface: operation digest(AlgorithmIdentifier, BufferSource)",
      "SubtleCrypto interface: operation generateKey(AlgorithmIdentifier, boolean, sequence<KeyUsage>)",
      "SubtleCrypto interface: operation deriveKey(AlgorithmIdentifier, CryptoKey, AlgorithmIdentifier, boolean, sequence<KeyUsage>)",
      "SubtleCrypto interface: operation deriveBits(AlgorithmIdentifier, CryptoKey, unsigned long)",
      "SubtleCrypto interface: operation importKey(KeyFormat, (BufferSource or JsonWebKey), AlgorithmIdentifier, boolean, sequence<KeyUsage>)",
      "SubtleCrypto interface: operation exportKey(KeyFormat, CryptoKey)",
      "SubtleCrypto interface: operation wrapKey(KeyFormat, CryptoKey, CryptoKey, AlgorithmIdentifier)",
      "SubtleCrypto interface: operation unwrapKey(KeyFormat, BufferSource, CryptoKey, AlgorithmIdentifier, AlgorithmIdentifier, boolean, sequence<KeyUsage>)",
      "Stringification of crypto.subtle",
      "SubtleCrypto interface: crypto.subtle must inherit property \"encrypt(AlgorithmIdentifier, CryptoKey, BufferSource)\" with the proper type",
      "SubtleCrypto interface: calling encrypt(AlgorithmIdentifier, CryptoKey, BufferSource) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"decrypt(AlgorithmIdentifier, CryptoKey, BufferSource)\" with the proper type",
      "SubtleCrypto interface: calling decrypt(AlgorithmIdentifier, CryptoKey, BufferSource) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"sign(AlgorithmIdentifier, CryptoKey, BufferSource)\" with the proper type",
      "SubtleCrypto interface: calling sign(AlgorithmIdentifier, CryptoKey, BufferSource) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"verify(AlgorithmIdentifier, CryptoKey, BufferSource, BufferSource)\" with the proper type",
      "SubtleCrypto interface: calling verify(AlgorithmIdentifier, CryptoKey, BufferSource, BufferSource) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"generateKey(AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type",
      "SubtleCrypto interface: calling generateKey(AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"deriveKey(AlgorithmIdentifier, CryptoKey, AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type",
      "SubtleCrypto interface: calling deriveKey(AlgorithmIdentifier, CryptoKey, AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"deriveBits(AlgorithmIdentifier, CryptoKey, unsigned long)\" with the proper type",
      "SubtleCrypto interface: calling deriveBits(AlgorithmIdentifier, CryptoKey, unsigned long) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"importKey(KeyFormat, (BufferSource or JsonWebKey), AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type",
      "SubtleCrypto interface: calling importKey(KeyFormat, (BufferSource or JsonWebKey), AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"exportKey(KeyFormat, CryptoKey)\" with the proper type",
      "SubtleCrypto interface: calling exportKey(KeyFormat, CryptoKey) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"wrapKey(KeyFormat, CryptoKey, CryptoKey, AlgorithmIdentifier)\" with the proper type",
      "SubtleCrypto interface: calling wrapKey(KeyFormat, CryptoKey, CryptoKey, AlgorithmIdentifier) on crypto.subtle with too few arguments must throw TypeError",
      "SubtleCrypto interface: crypto.subtle must inherit property \"unwrapKey(KeyFormat, BufferSource, CryptoKey, AlgorithmIdentifier, AlgorithmIdentifier, boolean, sequence<KeyUsage>)\" with the proper type",
      "SubtleCrypto interface: calling unwrapKey(KeyFormat, BufferSource, CryptoKey, AlgorithmIdentifier, AlgorithmIdentifier, boolean, sequence<KeyUsage>) on crypto.subtle with too few arguments must throw TypeError",
      "Window interface: attribute crypto"
    ],
    "import_export": {
      "ec_importKey.https.any.html": false,
      "rsa_importKey.https.any.html": false,
      "symmetric_importKey.https.any.html": false
    },
    "randomUUID.https.any.html": true,
    "sign_verify": {
      "ecdsa.https.any.html": false,
      "hmac.https.any.html": false,
      "rsa_pkcs.https.any.html": false,
      "rsa_pss.https.any.html": false
    },
    "wrapKey_unwrapKey": {
      "wrapKey_unwrapKey.https.any.html": false
    },
    "randomUUID.any.html": true
  },
  "console": {
    "console-is-a-namespace.any.html": true,
    "console-label-conversion.any.html": true,
    "console-namespace-object-class-string.any.html": true,
    "console-tests-historical.any.html": true,
    "idlharness.any.html": true
  },
  "dom": {
    "abort": {
      "event.any.html": true
    },
    "events": {
      "AddEventListenerOptions-signal.any.html": [
        "Passing null as the signal should throw"
      ],
      "Event-isTrusted.any.html": true,
      "EventTarget-constructible.any.html": true,
      "Event-constructors.any.html": [
        "Untitled 2",
        "Untitled 3"
      ]
    }
  },
  "encoding": {
    "api-basics.any.html": true,
    "api-invalid-label.any.html?1-1000": true,
    "api-invalid-label.any.html?1001-2000": true,
    "api-invalid-label.any.html?2001-3000": true,
    "api-invalid-label.any.html?3001-last": true,
    "api-replacement-encodings.any.html": true,
    "api-surrogates-utf8.any.html": true,
    "encodeInto.any.html": [
      "encodeInto() and a detached output buffer",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with Hi and destination length 0, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with A and destination length 10, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆 and destination length 4, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with 𝌆A and destination length 3, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with \ud834A\udf06A¥Hi and destination length 10, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with A\udf06 and destination length 4, offset 4, filler random",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 0, filler 0",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 4, filler 0",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 0, filler 128",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 4, filler 128",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 0, filler random",
      "encodeInto() into SharedArrayBuffer with ¥¥ and destination length 4, offset 4, filler random"
    ],
    "idlharness.any.html": true,
    "iso-2022-jp-decoder.any.html": true,
    "legacy-mb-schinese": {
      "gb18030": {
        "gb18030-decoder.any.html": true
      },
      "gbk": {
        "gbk-decoder.any.html": true
      }
    },
    "replacement-encodings.any.html": false,
    "streams": {
      "backpressure.any.html": true,
      "decode-attributes.any.html": true,
      "decode-bad-chunks.any.html": true,
      "decode-ignore-bom.any.html": true,
      "decode-incomplete-input.any.html": true,
      "decode-non-utf8.any.html": true,
      "decode-split-character.any.html": true,
      "decode-utf8.any.html": [
        "decoding a transferred Uint8Array chunk should give no output",
        "decoding a transferred ArrayBuffer chunk should give no output"
      ],
      "encode-bad-chunks.any.html": true,
      "encode-utf8.any.html": true,
      "readable-writable-properties.any.html": true
    },
    "textdecoder-arguments.any.html": true,
    "textdecoder-byte-order-marks.any.html": true,
    "textdecoder-copy.any.html": true,
    "textdecoder-fatal-single-byte.any.html?1-1000": true,
    "textdecoder-fatal-single-byte.any.html?1001-2000": true,
    "textdecoder-fatal-single-byte.any.html?2001-3000": true,
    "textdecoder-fatal-single-byte.any.html?3001-4000": true,
    "textdecoder-fatal-single-byte.any.html?4001-5000": true,
    "textdecoder-fatal-single-byte.any.html?5001-6000": true,
    "textdecoder-fatal-single-byte.any.html?6001-7000": true,
    "textdecoder-fatal-single-byte.any.html?7001-last": true,
    "textdecoder-fatal-streaming.any.html": true,
    "textdecoder-fatal.any.html": true,
    "textdecoder-ignorebom.any.html": true,
    "textdecoder-labels.any.html": [
      "unicode11utf8 => UTF-8",
      "unicode20utf8 => UTF-8",
      "x-unicode20utf8 => UTF-8",
      "unicodefffe => UTF-16BE",
      "csunicode => UTF-16LE",
      "iso-10646-ucs-2 => UTF-16LE",
      "ucs-2 => UTF-16LE",
      "unicode => UTF-16LE",
      "unicodefeff => UTF-16LE"
    ],
    "textdecoder-streaming.any.html": true,
    "textdecoder-utf16-surrogates.any.html": true,
    "textencoder-constructor-non-utf.any.html": true,
    "textencoder-utf16-surrogates.any.html": true,
    "unsupported-encodings.any.html": false,
    "single-byte-decoder.window.html?TextDecoder": true,
    "textdecoder-eof.any.html": true
  },
  "hr-time": {
    "monotonic-clock.any.html": true,
    "basic.any.html": [
      "Performance interface extends EventTarget."
    ],
    "idlharness.any.html": [
      "Performance interface: existence and properties of interface object",
      "Performance interface: existence and properties of interface prototype object",
      "Performance interface: operation now()",
      "Performance interface: attribute timeOrigin",
      "Performance interface: operation toJSON()",
      "Stringification of performance",
      "Performance interface: performance must inherit property \"timeOrigin\" with the proper type",
      "Performance interface: performance must inherit property \"toJSON()\" with the proper type",
      "Performance interface: default toJSON operation on performance",
      "Window interface: attribute performance"
    ],
    "window-worker-timeOrigin.window.html": false
  },
  "streams": {
    "idlharness.any.html": [
      "ReadableStreamBYOBReader interface: existence and properties of interface object",
      "ReadableStreamBYOBReader interface object length",
      "ReadableStreamBYOBReader interface object name",
      "ReadableStreamBYOBReader interface: existence and properties of interface prototype object",
      "ReadableStreamBYOBReader interface: existence and properties of interface prototype object's \"constructor\" property",
      "ReadableStreamBYOBReader interface: existence and properties of interface prototype object's @@unscopables property",
      "ReadableStreamBYOBReader interface: operation read(ArrayBufferView)",
      "ReadableStreamBYOBReader interface: operation releaseLock()",
      "ReadableStreamBYOBReader interface: attribute closed",
      "ReadableStreamBYOBReader interface: operation cancel(optional any)",
      "ReadableStreamBYOBReader must be primary interface of (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' })",
      "Stringification of (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' })",
      "ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"read(ArrayBufferView)\" with the proper type",
      "ReadableStreamBYOBReader interface: calling read(ArrayBufferView) on (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) with too few arguments must throw TypeError",
      "ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"releaseLock()\" with the proper type",
      "ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"closed\" with the proper type",
      "ReadableStreamBYOBReader interface: (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) must inherit property \"cancel(optional any)\" with the proper type",
      "ReadableStreamBYOBReader interface: calling cancel(optional any) on (new ReadableStream({ type: 'bytes' })).getReader({ mode: 'byob' }) with too few arguments must throw TypeError",
      "ReadableByteStreamController interface: self.readableByteStreamController must inherit property \"byobRequest\" with the proper type",
      "ReadableStreamBYOBRequest interface: existence and properties of interface object",
      "ReadableStreamBYOBRequest interface object length",
      "ReadableStreamBYOBRequest interface object name",
      "ReadableStreamBYOBRequest interface: existence and properties of interface prototype object",
      "ReadableStreamBYOBRequest interface: existence and properties of interface prototype object's \"constructor\" property",
      "ReadableStreamBYOBRequest interface: existence and properties of interface prototype object's @@unscopables property",
      "ReadableStreamBYOBRequest interface: attribute view",
      "ReadableStreamBYOBRequest interface: operation respond(unsigned long long)",
      "ReadableStreamBYOBRequest interface: operation respondWithNewView(ArrayBufferView)",
      "ReadableStreamBYOBRequest must be primary interface of self.readableStreamByobRequest",
      "Stringification of self.readableStreamByobRequest",
      "ReadableStreamBYOBRequest interface: self.readableStreamByobRequest must inherit property \"view\" with the proper type",
      "ReadableStreamBYOBRequest interface: self.readableStreamByobRequest must inherit property \"respond(unsigned long long)\" with the proper type",
      "ReadableStreamBYOBRequest interface: calling respond(unsigned long long) on self.readableStreamByobRequest with too few arguments must throw TypeError",
      "ReadableStreamBYOBRequest interface: self.readableStreamByobRequest must inherit property \"respondWithNewView(ArrayBufferView)\" with the proper type",
      "ReadableStreamBYOBRequest interface: calling respondWithNewView(ArrayBufferView) on self.readableStreamByobRequest with too few arguments must throw TypeError"
    ],
    "piping": {
      "abort.any.html": true,
      "close-propagation-backward.any.html": true,
      "close-propagation-forward.any.html": true,
      "error-propagation-backward.any.html": true,
      "error-propagation-forward.any.html": true,
      "flow-control.any.html": true,
      "general.any.html": true,
      "multiple-propagation.any.html": true,
      "pipe-through.any.html": true,
      "then-interception.any.html": true,
      "throwing-options.any.html": true,
      "transform-streams.any.html": true
    },
    "queuing-strategies.any.html": true,
    "readable-byte-streams": {
      "bad-buffers-and-views.any.html": [
        "ReadableStream with byte source: respond() throws if the BYOB request's buffer has been detached (in the readable state)",
        "ReadableStream with byte source: respond() throws if the BYOB request's buffer has been detached (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has been detached (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer is zero-length (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view is zero-length on a non-zero-length buffer (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has a different length (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view has a larger length (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has been detached (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer is zero-length (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view is non-zero-length (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() throws if the supplied view's buffer has a different length (in the closed state)",
        "ReadableStream with byte source: enqueue() throws if the BYOB request's buffer has been detached (in the readable state)",
        "ReadableStream with byte source: enqueue() throws if the BYOB request's buffer has been detached (in the closed state)",
        "ReadableStream with byte source: read()ing from a closed stream still transfers the buffer",
        "ReadableStream with byte source: read()ing from a stream with queued chunks still transfers the buffer",
        "ReadableStream with byte source: reading into an already-detached buffer rejects",
        "ReadableStream with byte source: reading into a zero-length buffer rejects",
        "ReadableStream with byte source: reading into a zero-length view on a non-zero-length buffer rejects"
      ],
      "construct-byob-request.any.html": false,
      "general.any.html": [
        "getReader({mode: \"byob\"}) throws on non-bytes streams",
        "ReadableStream with byte source can be constructed with no errors",
        "getReader({mode}) must perform ToString()",
        "ReadableStream with byte source: autoAllocateChunkSize cannot be 0",
        "ReadableStreamBYOBReader can be constructed directly",
        "ReadableStreamBYOBReader constructor requires a ReadableStream argument",
        "ReadableStreamBYOBReader constructor requires an unlocked ReadableStream",
        "ReadableStreamBYOBReader constructor requires a ReadableStream with type \"bytes\"",
        "ReadableStream with byte source: getReader() with mode set to byob, then releaseLock()",
        "ReadableStream with byte source: Test that closing a stream does not release a BYOB reader automatically",
        "ReadableStream with byte source: Test that erroring a stream does not release a BYOB reader automatically",
        "ReadableStream with byte source: autoAllocateChunkSize",
        "ReadableStream with byte source: Mix of auto allocate and BYOB",
        "ReadableStream with byte source: enqueue(), read(view) partially, then read()",
        "ReadableStream with byte source: Respond to pull() by enqueue()",
        "ReadableStream with byte source: Respond to pull() by enqueue() asynchronously",
        "ReadableStream with byte source: Respond to multiple pull() by separate enqueue()",
        "ReadableStream with byte source: read(view), then respond()",
        "ReadableStream with byte source: read(view), then respondWithNewView() with a transferred ArrayBuffer",
        "ReadableStream with byte source: read(view), then respond() with too big value",
        "ReadableStream with byte source: respond(3) to read(view) with 2 element Uint16Array enqueues the 1 byte remainder",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view)",
        "ReadableStream with byte source: enqueue(), getReader(), then cancel() (mode = BYOB)",
        "ReadableStream with byte source: getReader(), read(view), then cancel()",
        "ReadableStream with byte source: cancel() with partially filled pending pull() request",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view) where view.buffer is not fully covered by view",
        "ReadableStream with byte source: Multiple enqueue(), getReader(), then read(view)",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view) with a bigger view",
        "ReadableStream with byte source: enqueue(), getReader(), then read(view) with smaller views",
        "ReadableStream with byte source: enqueue() 1 byte, getReader(), then read(view) with Uint16Array",
        "ReadableStream with byte source: enqueue() 3 byte, getReader(), then read(view) with 2-element Uint16Array",
        "ReadableStream with byte source: read(view) with Uint16Array on close()-d stream with 1 byte enqueue()-d must fail",
        "ReadableStream with byte source: A stream must be errored if close()-d before fulfilling read(view) with Uint16Array",
        "ReadableStream with byte source: read(view), then respond() and close() in pull()",
        "ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple respond() calls",
        "ReadableStream with byte source: read(view) with Uint32Array, then fill it by multiple enqueue() calls",
        "ReadableStream with byte source: read() twice, then enqueue() twice",
        "ReadableStream with byte source: Multiple read(view), close() and respond()",
        "ReadableStream with byte source: Multiple read(view), big enqueue()",
        "ReadableStream with byte source: Multiple read(view) and multiple enqueue()",
        "ReadableStream with byte source: read(view) with passing undefined as view must fail",
        "ReadableStream with byte source: read(view) with passing an empty object as view must fail",
        "ReadableStream with byte source: Even read(view) with passing ArrayBufferView like object as view must fail",
        "ReadableStream with byte source: read(view) on an errored stream",
        "ReadableStream with byte source: read(view), then error()",
        "ReadableStream with byte source: Throwing in pull function must error the stream",
        "ReadableStream with byte source: Throwing in pull in response to read() must be ignored if the stream is errored in it",
        "ReadableStream with byte source: Throwing in pull in response to read(view) function must error the stream",
        "ReadableStream with byte source: Throwing in pull in response to read(view) must be ignored if the stream is errored in it",
        "calling respond() twice on the same byobRequest should throw",
        "calling respondWithNewView() twice on the same byobRequest should throw",
        "calling respond(0) twice on the same byobRequest should throw even when closed",
        "calling respond() should throw when canceled",
        "pull() resolving should not make releaseLock() possible",
        "ReadableStream with byte source: default reader + autoAllocateChunkSize + byobRequest interaction",
        "ReadableStream with byte source: respondWithNewView() with a smaller view",
        "ReadableStream with byte source: respondWithNewView() with a zero-length view (in the closed state)",
        "ReadableStream with byte source: respondWithNewView() with a transferred non-zero-length view (in the readable state)",
        "ReadableStream with byte source: respondWithNewView() with a transferred zero-length view (in the closed state)"
      ],
      "non-transferable-buffers.any.html": false,
      "enqueue-with-detached-buffer.window.html": false
    },
    "readable-streams": {
      "async-iterator.any.html": [
        "Async-iterating a pull source manually",
        "next() rejects if the stream errors",
        "return() does not rejects if the stream has not errored yet",
        "next() that succeeds; next() that reports an error; next()"
      ],
      "bad-strategies.any.html": true,
      "bad-underlying-sources.any.html": true,
      "cancel.any.html": true,
      "constructor.any.html": true,
      "count-queuing-strategy-integration.any.html": true,
      "default-reader.any.html": true,
      "floating-point-total-queue-size.any.html": true,
      "garbage-collection.any.html": true,
      "general.any.html": true,
      "patched-global.any.html": true,
      "reentrant-strategies.any.html": true,
      "tee.any.html": false,
      "templated.any.html": true
    },
    "transform-streams": {
      "backpressure.any.html": true,
      "errors.any.html": true,
      "flush.any.html": true,
      "general.any.html": true,
      "lipfuzz.any.html": true,
      "patched-global.any.html": true,
      "properties.any.html": true,
      "reentrant-strategies.any.html": true,
      "strategies.any.html": true,
      "terminate.any.html": true
    },
    "writable-streams": {
      "aborting.any.html": [
        "WritableStreamDefaultController.signal",
        "the abort signal is signalled synchronously - write",
        "the abort signal is signalled synchronously - close",
        "the abort signal is not signalled on error",
        "the abort signal is not signalled on write failure",
        "the abort signal is not signalled on close failure",
        "recursive abort() call"
      ],
      "bad-strategies.any.html": true,
      "bad-underlying-sinks.any.html": true,
      "byte-length-queuing-strategy.any.html": true,
      "close.any.html": [
        "when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time"
      ],
      "constructor.any.html": true,
      "count-queuing-strategy.any.html": true,
      "error.any.html": true,
      "floating-point-total-queue-size.any.html": true,
      "general.any.html": true,
      "properties.any.html": true,
      "reentrant-strategy.any.html": true,
      "start.any.html": true,
      "write.any.html": true
    },
    "queuing-strategies-size-function-per-global.window.html": false,
    "transferable": {
      "deserialize-error.window.html": false
    }
  },
  "user-timing": {
    "buffered-flag.any.html": false,
    "case-sensitivity.any.html": false,
    "clear_all_marks.any.html": true,
    "clear_all_measures.any.html": true,
    "clear_non_existent_mark.any.html": true,
    "clear_non_existent_measure.any.html": true,
    "clear_one_mark.any.html": true,
    "clear_one_measure.any.html": true,
    "entry_type.any.html": true,
    "idlharness.any.html": [
      "PerformanceMark interface: attribute detail",
      "PerformanceMeasure interface object length",
      "PerformanceMeasure interface: attribute detail",
      "Performance interface: operation mark(DOMString, optional PerformanceMarkOptions)",
      "Performance interface: operation clearMarks(optional DOMString)",
      "Performance interface: operation measure(DOMString, optional (DOMString or PerformanceMeasureOptions), optional DOMString)",
      "Performance interface: operation clearMeasures(optional DOMString)",
      "Performance interface: calling mark(DOMString, optional PerformanceMarkOptions) on performance with too few arguments must throw TypeError",
      "Performance interface: calling measure(DOMString, optional (DOMString or PerformanceMeasureOptions), optional DOMString) on performance with too few arguments must throw TypeError"
    ],
    "mark-entry-constructor.any.html": true,
    "mark-errors.any.html": true,
    "mark-l3.any.html": false,
    "mark-measure-return-objects.any.html": true,
    "mark.any.html": true,
    "measure-l3.any.html": true,
    "measure-with-dict.any.html": [
      "measure entries' detail and start/end are customizable"
    ],
    "measure_syntax_err.any.html": true,
    "structured-serialize-detail.any.html": true,
    "supported-usertiming-types.any.html": false,
    "user_timing_exists.any.html": true
  },
  "wasm": {
    "jsapi": {
      "constructor": {
        "compile.any.html": true,
        "instantiate-bad-imports.any.html": true,
        "instantiate.any.html": [
          "Synchronous options handling: Buffer argument"
        ],
        "multi-value.any.html": true,
        "toStringTag.any.html": true,
        "validate.any.html": true
      },
      "global": {
        "constructor.any.html": true,
        "toString.any.html": true,
        "type.tentative.any.html": false,
        "value-get-set.any.html": true,
        "valueOf.any.html": true
      },
      "idlharness.any.html": [
        "Table interface: operation set(unsigned long, optional any)"
      ],
      "instance": {
        "constructor-bad-imports.any.html": true,
        "constructor-caching.any.html": true,
        "constructor.any.html": true,
        "exports.any.html": true,
        "toString.any.html": true
      },
      "interface.any.html": true,
      "memory": {
        "buffer.any.html": true,
        "constructor.any.html": true,
        "grow.any.html": true,
        "toString.any.html": true,
        "type.tentative.any.html": false,
        "constructor-shared.tentative.any.html": true,
        "constructor-types.tentative.any.html": false
      },
      "module": {
        "constructor.any.html": true,
        "customSections.any.html": true,
        "exports.any.html": true,
        "imports.any.html": true,
        "toString.any.html": true
      },
      "prototypes.any.html": false,
      "table": {
        "constructor.any.html": true,
        "get-set.any.html": true,
        "grow.any.html": true,
        "length.any.html": true,
        "toString.any.html": true,
        "constructor-reftypes.tentative.any.html": [
          "initialize externref table with default value",
          "initialize anyfunc table with default value",
          "initialize anyfunc table with a bad default value"
        ],
        "constructor-types.tentative.any.html": false,
        "grow-reftypes.tentative.any.html": false,
        "set-reftypes.tentative.any.html": false,
        "type.tentative.any.html": false
      }
    },
    "serialization": {
      "module": {
        "serialization-via-idb.any.html": false,
        "serialization-via-notifications-api.any.html": false
      }
    },
    "webapi": {
      "abort.any.html": true,
      "body.any.html": true,
      "contenttype.any.html": true,
      "empty-body.any.html": true,
      "historical.any.html": false,
      "idlharness.any.html": true,
      "instantiateStreaming-bad-imports.any.html": true,
      "instantiateStreaming.any.html": true,
      "invalid-args.any.html": true,
      "invalid-code.any.html": true,
      "modified-contenttype.any.html": true,
      "origin.sub.any.html": [
        "Opaque response: compileStreaming",
        "Opaque response: instantiateStreaming"
      ],
      "rejected-arg.any.html": true,
      "status.any.html": true
    }
  },
  "WebIDL": {
    "ecmascript-binding": {
      "es-exceptions": {
        "DOMException-constants.any.html": true,
        "DOMException-constructor-and-prototype.any.html": true,
        "DOMException-constructor-behavior.any.html": true,
        "DOMException-custom-bindings.any.html": [
          "does not inherit from Error: class-side"
        ]
      }
    }
  },
  "url": {
    "historical.any.html": [
      "<a> and <area>.searchParams should be undefined"
    ],
    "idlharness.any.html": true,
    "url-constructor.any.html": [
      "Parsing: <foo://ho|st/> against <about:blank>",
      "Parsing: <http://ho%7Cst/> against <about:blank>",
      "Parsing: <file://%43%7C> against <about:blank>",
      "Parsing: <file://%43|> against <about:blank>",
      "Parsing: <file://C%7C> against <about:blank>",
      "Parsing: <file://%43%7C/> against <about:blank>",
      "Parsing: <https://%43%7C/> against <about:blank>",
      "Parsing: <asdf://%43|/> against <about:blank>",
      "Parsing: </> against <file://h/C:/a/b>",
      "Parsing: <file:\\\\//> against <about:blank>",
      "Parsing: <file:\\\\\\\\> against <about:blank>",
      "Parsing: <file:\\\\\\\\?fox> against <about:blank>",
      "Parsing: <file:\\\\\\\\#guppy> against <about:blank>",
      "Parsing: <file://spider///> against <about:blank>",
      "Parsing: <file:\\\\localhost//> against <about:blank>",
      "Parsing: <file://\\/localhost//cat> against <about:blank>",
      "Parsing: <file://localhost//a//../..//> against <about:blank>",
      "Parsing: </////mouse> against <file:///elephant>",
      "Parsing: <\\/localhost//pig> against <file://lion/>",
      "Parsing: <//localhost//pig> against <file://lion/>",
      "Parsing: </..//localhost//pig> against <file://lion/>",
      "Parsing: <C|> against <file://host/dir/file>",
      "Parsing: <C|> against <file://host/D:/dir1/dir2/file>",
      "Parsing: <C|#> against <file://host/dir/file>",
      "Parsing: <C|?> against <file://host/dir/file>",
      "Parsing: <C|/> against <file://host/dir/file>",
      "Parsing: <C|\n/> against <file://host/dir/file>",
      "Parsing: <C|\\> against <file://host/dir/file>",
      "Parsing: </c:/foo/bar> against <file://host/path>",
      "Parsing: <file://example.net/C:/> against <about:blank>",
      "Parsing: <file://1.2.3.4/C:/> against <about:blank>",
      "Parsing: <file://[1::8]/C:/> against <about:blank>",
      "Parsing: <C|/> against <file://host/>",
      "Parsing: </C:/> against <file://host/>",
      "Parsing: <file:C:/> against <file://host/>",
      "Parsing: <file:/C:/> against <file://host/>",
      "Parsing: <file://localhost//a//../..//foo> against <about:blank>",
      "Parsing: <file://localhost////foo> against <about:blank>",
      "Parsing: <file:////foo> against <about:blank>",
      "Parsing: <file:////one/two> against <file:///>",
      "Parsing: <////one/two> against <file:///>",
      "Parsing: <file:///.//> against <file:////>",
      "Parsing: <file:.//p> against <about:blank>",
      "Parsing: <file:/.//p> against <about:blank>",
      "Parsing: <non-spec:/.//> against <about:blank>",
      "Parsing: <non-spec:/..//> against <about:blank>",
      "Parsing: <non-spec:/a/..//> against <about:blank>",
      "Parsing: <non-spec:/.//path> against <about:blank>",
      "Parsing: <non-spec:/..//path> against <about:blank>",
      "Parsing: <non-spec:/a/..//path> against <about:blank>",
      "Parsing: </.//path> against <non-spec:/p>",
      "Parsing: </..//path> against <non-spec:/p>",
      "Parsing: <..//path> against <non-spec:/p>",
      "Parsing: <a/..//path> against <non-spec:/p>",
      "Parsing: <> against <non-spec:/..//p>",
      "Parsing: <path> against <non-spec:/..//p>"
    ],
    "url-origin.any.html": true,
    "url-searchparams.any.html": true,
    "url-setters-stripping.any.html": [
      "Setting protocol with leading U+0000 (https:)",
      "Setting protocol with U+0000 before inserted colon (https:)",
      "Setting port with leading U+0000 (https:)",
      "Setting pathname with trailing U+0000 (https:)",
      "Setting protocol with leading U+001F (https:)",
      "Setting protocol with U+001F before inserted colon (https:)",
      "Setting port with leading U+001F (https:)",
      "Setting pathname with trailing U+001F (https:)",
      "Setting protocol with leading U+0000 (wpt++:)",
      "Setting protocol with U+0000 before inserted colon (wpt++:)",
      "Setting port with leading U+0000 (wpt++:)",
      "Setting pathname with trailing U+0000 (wpt++:)",
      "Setting protocol with leading U+001F (wpt++:)",
      "Setting protocol with U+001F before inserted colon (wpt++:)",
      "Setting port with leading U+001F (wpt++:)",
      "Setting pathname with trailing U+001F (wpt++:)"
    ],
    "url-tojson.any.html": true,
    "urlencoded-parser.any.html": true,
    "urlsearchparams-append.any.html": true,
    "urlsearchparams-constructor.any.html": true,
    "urlsearchparams-delete.any.html": true,
    "urlsearchparams-foreach.any.html": true,
    "urlsearchparams-get.any.html": true,
    "urlsearchparams-getall.any.html": true,
    "urlsearchparams-has.any.html": true,
    "urlsearchparams-set.any.html": true,
    "urlsearchparams-sort.any.html": true,
    "urlsearchparams-stringifier.any.html": true,
    "url-setters.any.html": [
      "URL: Setting <http://example.net/path>.hostname = 'example.com:8080' : delimiter invalidates entire value",
      "URL: Setting <http://example.net:8080/path>.hostname = 'example.com:' : delimiter invalidates entire value",
      "URL: Setting <non-spec:/.//p>.hostname = 'h' Drop /. from path",
      "URL: Setting <non-spec:/.//p>.hostname = ''",
      "URL: Setting <foo://somehost/some/path>.pathname = '' Non-special URLs can have their paths erased",
      "URL: Setting <foo:///some/path>.pathname = '' Non-special URLs with an empty host can have their paths erased",
      "URL: Setting <file://monkey/>.pathname = '\\\\' File URLs and (back)slashes",
      "URL: Setting <file:///unicorn>.pathname = '//\\/' File URLs and (back)slashes",
      "URL: Setting <file:///unicorn>.pathname = '//monkey/..//' File URLs and (back)slashes",
      "URL: Setting <non-spec:/>.pathname = '/.//p' Serialize /. in path",
      "URL: Setting <non-spec:/>.pathname = '/..//p'",
      "URL: Setting <non-spec:/>.pathname = '//p'",
      "URL: Setting <non-spec:/.//>.pathname = 'p' Drop /. from path"
    ]
  },
  "fetch": {
    "api": {
      "request": {
        "request-init-002.any.html": true,
        "request-init-stream.any.html": true,
        "request-consume-empty.any.html": [
          "Consume empty FormData request body as text"
        ],
        "request-consume.any.html": true
      },
      "headers": {
        "headers-basic.any.html": true,
        "headers-casing.any.html": true,
        "headers-combine.any.html": true,
        "headers-errors.any.html": true,
        "headers-normalize.any.html": true,
        "headers-record.any.html": true,
        "headers-structure.any.html": true
      },
      "basic": {
        "request-head.any.html": true,
        "request-headers-case.any.html": false,
        "request-headers-nonascii.any.html": true,
        "request-headers.any.html": [
          "Fetch with PUT without body",
          "Fetch with PUT with body",
          "Fetch with POST without body",
          "Fetch with POST with text body",
          "Fetch with POST with FormData body",
          "Fetch with POST with URLSearchParams body",
          "Fetch with POST with Blob body",
          "Fetch with POST with ArrayBuffer body",
          "Fetch with POST with Uint8Array body",
          "Fetch with POST with Int8Array body",
          "Fetch with POST with Float32Array body",
          "Fetch with POST with Float64Array body",
          "Fetch with POST with DataView body",
          "Fetch with POST with Blob body with mime type",
          "Fetch with Chicken",
          "Fetch with Chicken with body",
          "Fetch with POST and mode \"same-origin\" needs an Origin header",
          "Fetch with POST and mode \"no-cors\" needs an Origin header",
          "Fetch with PUT and mode \"same-origin\" needs an Origin header",
          "Fetch with TacO and mode \"same-origin\" needs an Origin header",
          "Fetch with TacO and mode \"cors\" needs an Origin header"
        ],
        "text-utf8.any.html": true,
        "accept-header.any.html": [
          "Request through fetch should have a 'accept-language' header"
        ],
        "conditional-get.any.html": false,
        "error-after-response.any.html": false,
        "header-value-combining.any.html": false,
        "header-value-null-byte.any.html": true,
        "historical.any.html": true,
        "http-response-code.any.html": true,
        "request-upload.any.html": [
          "Fetch with POST with ReadableStream",
          "Fetch with POST with ReadableStream containing String",
          "Fetch with POST with ReadableStream containing null",
          "Fetch with POST with ReadableStream containing number",
          "Fetch with POST with ReadableStream containing ArrayBuffer",
          "Fetch with POST with ReadableStream containing Blob",
          "Fetch with POST with text body on 421 response should be retried once on new connection."
        ],
        "response-url.sub.any.html": true,
        "scheme-about.any.html": true,
        "scheme-blob.sub.any.html": true,
        "scheme-data.any.html": true,
        "scheme-others.sub.any.html": true,
        "stream-response.any.html": true,
        "stream-safe-creation.any.html": [
          "throwing Object.prototype.start accessor should not affect stream creation by 'fetch'",
          "Object.prototype.start accessor returning invalid value should not affect stream creation by 'fetch'",
          "throwing Object.prototype.type accessor should not affect stream creation by 'fetch'",
          "throwing Object.prototype.size accessor should not affect stream creation by 'fetch'",
          "Object.prototype.size accessor returning invalid value should not affect stream creation by 'fetch'",
          "throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'fetch'",
          "Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'fetch'"
        ]
      },
      "response": {
        "json.any.html": true,
        "response-init-001.any.html": true,
        "response-init-002.any.html": true,
        "response-static-error.any.html": true,
        "response-static-redirect.any.html": true,
        "response-stream-disturbed-1.any.html": true,
        "response-stream-disturbed-2.any.html": true,
        "response-stream-disturbed-3.any.html": true,
        "response-stream-disturbed-4.any.html": true,
        "response-stream-disturbed-5.any.html": true,
        "response-stream-disturbed-6.any.html": true,
        "response-stream-disturbed-by-pipe.any.html": true,
        "response-stream-with-broken-then.any.html": [
          "Attempt to inject {done: false, value: bye} via Object.prototype.then.",
          "Attempt to inject value: undefined via Object.prototype.then.",
          "Attempt to inject undefined via Object.prototype.then.",
          "Attempt to inject 8.2 via Object.prototype.then.",
          "intercepting arraybuffer to text conversion via Object.prototype.then should not be possible"
        ],
        "response-error-from-stream.any.html": true,
        "response-error.any.html": true,
        "response-from-stream.any.html": true,
        "response-cancel-stream.any.html": true,
        "response-clone.any.html": [
          "Check response clone use structureClone for teed ReadableStreams (Int8Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (Int16Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (Int32Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (ArrayBufferchunk)",
          "Check response clone use structureClone for teed ReadableStreams (Uint8Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (Uint8ClampedArraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (Uint16Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (Uint32Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (BigInt64Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (BigUint64Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (Float32Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (Float64Arraychunk)",
          "Check response clone use structureClone for teed ReadableStreams (DataViewchunk)"
        ],
        "response-consume-empty.any.html": [
          "Consume empty FormData response body as text"
        ],
        "response-consume-stream.any.html": true
      },
      "body": {
        "mime-type.any.html": true
      },
      "redirect": {
        "redirect-count.any.html": true,
        "redirect-empty-location.any.html": [
          "redirect response with empty Location, manual mode"
        ],
        "redirect-location.any.html": [
          "Redirect 301 in \"manual\" mode without location",
          "Redirect 301 in \"manual\" mode with invalid location",
          "Redirect 301 in \"manual\" mode with data location",
          "Redirect 302 in \"manual\" mode without location",
          "Redirect 302 in \"manual\" mode with invalid location",
          "Redirect 302 in \"manual\" mode with data location",
          "Redirect 303 in \"manual\" mode without location",
          "Redirect 303 in \"manual\" mode with invalid location",
          "Redirect 303 in \"manual\" mode with data location",
          "Redirect 307 in \"manual\" mode without location",
          "Redirect 307 in \"manual\" mode with invalid location",
          "Redirect 307 in \"manual\" mode with data location",
          "Redirect 308 in \"manual\" mode without location",
          "Redirect 308 in \"manual\" mode with invalid location",
          "Redirect 308 in \"manual\" mode with data location"
        ],
        "redirect-method.any.html": true,
        "redirect-schemes.any.html": true,
        "redirect-to-dataurl.any.html": true
      },
      "idlharness.any.html": [
        "Request interface: attribute destination",
        "Request interface: attribute referrer",
        "Request interface: attribute referrerPolicy",
        "Request interface: attribute mode",
        "Request interface: attribute credentials",
        "Request interface: attribute cache",
        "Request interface: attribute integrity",
        "Request interface: attribute keepalive",
        "Request interface: attribute isReloadNavigation",
        "Request interface: attribute isHistoryNavigation",
        "Request interface: attribute body",
        "Request interface: attribute bodyUsed",
        "Request interface: new Request('about:blank') must inherit property \"destination\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"referrer\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"referrerPolicy\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"mode\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"credentials\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"cache\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"integrity\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"keepalive\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"isReloadNavigation\" with the proper type",
        "Request interface: new Request('about:blank') must inherit property \"isHistoryNavigation\" with the proper type",
        "Response interface: operation error()",
        "Response interface: operation redirect(USVString, optional unsigned short)",
        "Response interface: attribute body",
        "Response interface: attribute bodyUsed",
        "Response interface: calling redirect(USVString, optional unsigned short) on new Response() with too few arguments must throw TypeError",
        "Window interface: operation fetch(RequestInfo, optional RequestInit)"
      ],
      "abort": {
        "general.any.html": [
          "response.arrayBuffer() rejects if already aborted",
          "response.blob() rejects if already aborted",
          "response.formData() rejects if already aborted",
          "response.json() rejects if already aborted",
          "response.text() rejects if already aborted"
        ]
      }
    },
    "data-urls": {
      "base64.any.html": true,
      "processing.any.html": [
        "\"data:text/plain;a=\\\",\\\",X\""
      ]
    }
  },
  "FileAPI": {
    "blob": {
      "Blob-array-buffer.any.html": true,
      "Blob-constructor.any.html": true,
      "Blob-slice-overflow.any.html": true,
      "Blob-slice.any.html": true,
      "Blob-stream.any.html": true,
      "Blob-text.any.html": true
    },
    "file": {
      "File-constructor.any.html": true,
      "send-file-formdata-controls.any.html": true,
      "send-file-formdata-punctuation.any.html": true,
      "send-file-formdata-utf-8.any.html": true,
      "send-file-formdata.any.html": true
    },
    "fileReader.any.html": true,
    "url": {
      "url-format.any.html": true,
      "url-with-fetch.any.html": [
        "Revoke blob URL after creating Request, will fetch"
      ]
    },
    "reading-data-section": {
      "Determining-Encoding.any.html": true,
      "FileReader-event-handler-attributes.any.html": true,
      "FileReader-multiple-reads.any.html": true,
      "filereader_abort.any.html": true,
      "filereader_error.any.html": true,
      "filereader_events.any.html": false,
      "filereader_readAsArrayBuffer.any.html": true,
      "filereader_readAsBinaryString.any.html": true,
      "filereader_readAsDataURL.any.html": true,
      "filereader_readAsText.any.html": true,
      "filereader_readystate.any.html": true,
      "filereader_result.any.html": [
        "result is null during \"loadstart\" event for readAsText",
        "result is null during \"loadstart\" event for readAsDataURL",
        "result is null during \"loadstart\" event for readAsArrayBuffer",
        "result is null during \"loadstart\" event for readAsBinaryString",
        "result is null during \"progress\" event for readAsText",
        "result is null during \"progress\" event for readAsDataURL",
        "result is null during \"progress\" event for readAsArrayBuffer",
        "result is null during \"progress\" event for readAsBinaryString"
      ]
    }
  },
  "html": {
    "webappapis": {
      "atob": {
        "base64.any.html": true
      },
      "timers": {
        "cleartimeout-clearinterval.any.html": true,
        "missing-timeout-setinterval.any.html": true,
        "negative-setinterval.any.html": true,
        "negative-settimeout.any.html": true,
        "type-long-setinterval.any.html": true,
        "type-long-settimeout.any.html": true
      },
      "microtask-queuing": {
        "queue-microtask-exceptions.any.html": true,
        "queue-microtask.any.html": true
      }
    }
  },
  "webstorage": {
    "defineProperty.window.html": true,
    "set.window.html": true,
    "storage_enumerate.window.html": true,
    "storage_in.window.html": true,
    "event_constructor.window.html": false,
    "event_initstorageevent.window.html": false,
    "missing_arguments.window.html": true,
    "storage_builtins.window.html": true,
    "storage_clear.window.html": true,
    "storage_functions_not_overwritten.window.html": true,
    "storage_getitem.window.html": true,
    "storage_indexing.window.html": true,
    "storage_key.window.html": true,
    "storage_key_empty_string.window.html": true,
    "storage_length.window.html": true,
    "storage_local_setitem_quotaexceedederr.window.html": true,
    "storage_removeitem.window.html": true,
    "storage_session_setitem_quotaexceedederr.window.html": true,
    "storage_set_value_enumerate.window.html": true,
    "storage_setitem.window.html": [
      "localStorage[] = \"\ud800\"",
      "localStorage[] = \"\udbff\"",
      "localStorage[] = \"\udc00\"",
      "localStorage[] = \"\udfff\"",
      "localStorage[] = \"\ud83ca\"",
      "localStorage[] = \"a\udf4d\"",
      "sessionStorage[] = \"\ud800\"",
      "sessionStorage[] = \"\udbff\"",
      "sessionStorage[] = \"\udc00\"",
      "sessionStorage[] = \"\udfff\"",
      "sessionStorage[] = \"\ud83ca\"",
      "sessionStorage[] = \"a\udf4d\""
    ],
    "storage_string_conversion.window.html": true,
    "storage_supported_property_names.window.html": true,
    "symbol-props.window.html": [
      "localStorage: defineProperty not configurable",
      "sessionStorage: defineProperty not configurable"
    ]
  },
  "webmessaging": {
    "broadcastchannel": {
      "basics.any.html": [
        "postMessage results in correct event"
      ],
      "interface.any.html": true
    },
    "message-channels": {
      "basics.any.html": true,
      "close.any.html": true,
      "dictionary-transferrable.any.html": false,
      "implied-start.any.html": true,
      "no-start.any.html": true,
      "user-activation.tentative.any.html": false,
      "worker-post-after-close.any.html": false,
      "worker.any.html": false
    },
    "Channel_postMessage_Blob.any.html": false,
    "Channel_postMessage_DataCloneErr.any.html": true,
    "Channel_postMessage_clone_port.any.html": true,
    "Channel_postMessage_clone_port_error.any.html": true,
    "Channel_postMessage_event_properties.any.html": true,
    "Channel_postMessage_ports_readonly_array.any.html": false,
    "Channel_postMessage_target_source.any.html": true,
    "Channel_postMessage_transfer_xsite_incoming_messages.window.html": false,
    "Channel_postMessage_with_transfer_entangled.any.html": true,
    "Channel_postMessage_with_transfer_incoming_messages.any.html": true,
    "Channel_postMessage_with_transfer_outgoing_messages.any.html": true,
    "MessageEvent-trusted.any.html": false,
    "MessageEvent-trusted.window.html": false,
    "MessageEvent.any.html": true,
    "MessagePort_initial_disabled.any.html": true,
    "MessagePort_onmessage_start.any.html": true
  },
  "xhr": {
    "formdata": {
      "append.any.html": true,
      "constructor.any.html": true,
      "delete.any.html": true,
      "foreach.any.html": true,
      "get.any.html": true,
      "has.any.html": true,
      "set-blob.any.html": true,
      "set.any.html": true
    }
  },
  "websockets": {
    "Close-1000-reason.any.html": true,
    "Close-1000-reason.any.html?wpt_flags=h2": false,
    "Close-1000-reason.any.html?wss": true,
    "Close-1000-verify-code.any.html": true,
    "Close-1000-verify-code.any.html?wpt_flags=h2": false,
    "Close-1000-verify-code.any.html?wss": true,
    "Close-1000.any.html": true,
    "Close-1000.any.html?wpt_flags=h2": false,
    "Close-1000.any.html?wss": true,
    "Close-1005-verify-code.any.html": true,
    "Close-1005-verify-code.any.html?wpt_flags=h2": false,
    "Close-1005-verify-code.any.html?wss": true,
    "Close-1005.any.html": true,
    "Close-1005.any.html?wpt_flags=h2": false,
    "Close-1005.any.html?wss": true,
    "Close-2999-reason.any.html": true,
    "Close-2999-reason.any.html?wpt_flags=h2": false,
    "Close-2999-reason.any.html?wss": true,
    "Close-3000-reason.any.html": true,
    "Close-3000-reason.any.html?wpt_flags=h2": false,
    "Close-3000-reason.any.html?wss": true,
    "Close-3000-verify-code.any.html": true,
    "Close-3000-verify-code.any.html?wpt_flags=h2": false,
    "Close-3000-verify-code.any.html?wss": true,
    "Close-4999-reason.any.html": true,
    "Close-4999-reason.any.html?wpt_flags=h2": false,
    "Close-4999-reason.any.html?wss": true,
    "Close-Reason-124Bytes.any.html": true,
    "Close-Reason-124Bytes.any.html?wpt_flags=h2": false,
    "Close-Reason-124Bytes.any.html?wss": true,
    "Close-onlyReason.any.html": true,
    "Close-onlyReason.any.html?wpt_flags=h2": false,
    "Close-onlyReason.any.html?wss": true,
    "Close-readyState-Closed.any.html": true,
    "Close-readyState-Closed.any.html?wpt_flags=h2": false,
    "Close-readyState-Closed.any.html?wss": true,
    "Close-readyState-Closing.any.html": true,
    "Close-readyState-Closing.any.html?wpt_flags=h2": false,
    "Close-readyState-Closing.any.html?wss": true,
    "Close-reason-unpaired-surrogates.any.html": true,
    "Close-reason-unpaired-surrogates.any.html?wpt_flags=h2": false,
    "Close-reason-unpaired-surrogates.any.html?wss": true,
    "Close-server-initiated-close.any.html": true,
    "Close-server-initiated-close.any.html?wpt_flags=h2": false,
    "Close-server-initiated-close.any.html?wss": true,
    "Close-undefined.any.html": true,
    "Close-undefined.any.html?wpt_flags=h2": false,
    "Close-undefined.any.html?wss": true,
    "Create-asciiSep-protocol-string.any.html": true,
    "Create-asciiSep-protocol-string.any.html?wpt_flags=h2": true,
    "Create-asciiSep-protocol-string.any.html?wss": true,
    "Create-blocked-port.any.html": true,
    "Create-blocked-port.any.html?wpt_flags=h2": [
      "Basic check"
    ],
    "Create-blocked-port.any.html?wss": true,
    "Create-extensions-empty.any.html": true,
    "Create-extensions-empty.any.html?wpt_flags=h2": false,
    "Create-extensions-empty.any.html?wss": true,
    "Create-invalid-urls.any.html": true,
    "Create-invalid-urls.any.html?wpt_flags=h2": true,
    "Create-invalid-urls.any.html?wss": true,
    "Create-non-absolute-url.any.html": true,
    "Create-non-absolute-url.any.html?wpt_flags=h2": true,
    "Create-non-absolute-url.any.html?wss": true,
    "Create-nonAscii-protocol-string.any.html": true,
    "Create-nonAscii-protocol-string.any.html?wpt_flags=h2": true,
    "Create-nonAscii-protocol-string.any.html?wss": true,
    "Create-on-worker-shutdown.any.html": false,
    "Create-protocol-with-space.any.html": true,
    "Create-protocol-with-space.any.html?wpt_flags=h2": true,
    "Create-protocol-with-space.any.html?wss": true,
    "Create-protocols-repeated-case-insensitive.any.html": true,
    "Create-protocols-repeated-case-insensitive.any.html?wpt_flags=h2": true,
    "Create-protocols-repeated-case-insensitive.any.html?wss": true,
    "Create-protocols-repeated.any.html": true,
    "Create-protocols-repeated.any.html?wpt_flags=h2": true,
    "Create-protocols-repeated.any.html?wss": true,
    "Create-url-with-space.any.html": true,
    "Create-url-with-space.any.html?wpt_flags=h2": true,
    "Create-url-with-space.any.html?wss": true,
    "Create-valid-url-array-protocols.any.html": true,
    "Create-valid-url-array-protocols.any.html?wpt_flags=h2": false,
    "Create-valid-url-array-protocols.any.html?wss": true,
    "Create-valid-url-binaryType-blob.any.html": true,
    "Create-valid-url-binaryType-blob.any.html?wpt_flags=h2": false,
    "Create-valid-url-binaryType-blob.any.html?wss": true,
    "Create-valid-url-protocol-empty.any.html": true,
    "Create-valid-url-protocol-empty.any.html?wpt_flags=h2": true,
    "Create-valid-url-protocol-empty.any.html?wss": true,
    "Create-valid-url-protocol-setCorrectly.any.html": true,
    "Create-valid-url-protocol-setCorrectly.any.html?wpt_flags=h2": false,
    "Create-valid-url-protocol-setCorrectly.any.html?wss": true,
    "Create-valid-url-protocol-string.any.html": true,
    "Create-valid-url-protocol-string.any.html?wpt_flags=h2": false,
    "Create-valid-url-protocol-string.any.html?wss": true,
    "Create-valid-url-protocol.any.html": true,
    "Create-valid-url-protocol.any.html?wpt_flags=h2": false,
    "Create-valid-url-protocol.any.html?wss": true,
    "Create-valid-url.any.html": true,
    "Create-valid-url.any.html?wpt_flags=h2": false,
    "Create-valid-url.any.html?wss": true,
    "Create-wrong-scheme.any.html": true,
    "Create-wrong-scheme.any.html?wpt_flags=h2": true,
    "Create-wrong-scheme.any.html?wss": true,
    "Send-0byte-data.any.html": true,
    "Send-0byte-data.any.html?wpt_flags=h2": false,
    "Send-0byte-data.any.html?wss": true,
    "Send-65K-data.any.html": true,
    "Send-65K-data.any.html?wpt_flags=h2": false,
    "Send-65K-data.any.html?wss": true,
    "Send-before-open.any.html": true,
    "Send-before-open.any.html?wpt_flags=h2": true,
    "Send-before-open.any.html?wss": true,
    "Send-binary-65K-arraybuffer.any.html": true,
    "Send-binary-65K-arraybuffer.any.html?wpt_flags=h2": false,
    "Send-binary-65K-arraybuffer.any.html?wss": true,
    "Send-binary-arraybuffer.any.html": true,
    "Send-binary-arraybuffer.any.html?wpt_flags=h2": false,
    "Send-binary-arraybuffer.any.html?wss": true,
    "Send-binary-arraybufferview-float32.any.html": true,
    "Send-binary-arraybufferview-float32.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-float32.any.html?wss": true,
    "Send-binary-arraybufferview-float64.any.html": true,
    "Send-binary-arraybufferview-float64.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-float64.any.html?wss": true,
    "Send-binary-arraybufferview-int16-offset.any.html": true,
    "Send-binary-arraybufferview-int16-offset.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-int16-offset.any.html?wss": true,
    "Send-binary-arraybufferview-int32.any.html": true,
    "Send-binary-arraybufferview-int32.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-int32.any.html?wss": true,
    "Send-binary-arraybufferview-int8.any.html": true,
    "Send-binary-arraybufferview-int8.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-int8.any.html?wss": true,
    "Send-binary-arraybufferview-uint16-offset-length.any.html": true,
    "Send-binary-arraybufferview-uint16-offset-length.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-uint16-offset-length.any.html?wss": true,
    "Send-binary-arraybufferview-uint32-offset.any.html": true,
    "Send-binary-arraybufferview-uint32-offset.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-uint32-offset.any.html?wss": true,
    "Send-binary-arraybufferview-uint8-offset-length.any.html": true,
    "Send-binary-arraybufferview-uint8-offset-length.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-uint8-offset-length.any.html?wss": true,
    "Send-binary-arraybufferview-uint8-offset.any.html": true,
    "Send-binary-arraybufferview-uint8-offset.any.html?wpt_flags=h2": false,
    "Send-binary-arraybufferview-uint8-offset.any.html?wss": true,
    "Send-binary-blob.any.html": true,
    "Send-binary-blob.any.html?wpt_flags=h2": false,
    "Send-binary-blob.any.html?wss": true,
    "Send-data.any.html": true,
    "Send-data.any.html?wpt_flags=h2": false,
    "Send-data.any.html?wss": true,
    "Send-null.any.html": true,
    "Send-null.any.html?wpt_flags=h2": false,
    "Send-null.any.html?wss": true,
    "Send-paired-surrogates.any.html": true,
    "Send-paired-surrogates.any.html?wpt_flags=h2": false,
    "Send-paired-surrogates.any.html?wss": true,
    "Send-unicode-data.any.html": true,
    "Send-unicode-data.any.html?wpt_flags=h2": false,
    "Send-unicode-data.any.html?wss": true,
    "Send-unpaired-surrogates.any.html": true,
    "Send-unpaired-surrogates.any.html?wpt_flags=h2": false,
    "Send-unpaired-surrogates.any.html?wss": true,
    "basic-auth.any.html?wpt_flags=h2": false,
    "basic-auth.any.html?wss": false,
    "binaryType-wrong-value.any.html": true,
    "binaryType-wrong-value.any.html?wpt_flags=h2": false,
    "binaryType-wrong-value.any.html?wss": true,
    "bufferedAmount-unchanged-by-sync-xhr.any.html": false,
    "bufferedAmount-unchanged-by-sync-xhr.any.html?wpt_flags=h2": false,
    "bufferedAmount-unchanged-by-sync-xhr.any.html?wss": false,
    "close-invalid.any.html": true,
    "close-invalid.any.html?wpt_flags=h2": true,
    "close-invalid.any.html?wss": true,
    "constructor.any.html": true,
    "constructor.any.html?wpt_flags=h2": true,
    "constructor.any.html?wss": true,
    "eventhandlers.any.html": false,
    "eventhandlers.any.html?wpt_flags=h2": false,
    "eventhandlers.any.html?wss": false,
    "referrer.any.html": true
  }
}