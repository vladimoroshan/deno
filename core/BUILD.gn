import("//build_extra/rust/rust.gni")

group("default") {
  testonly = true
  deps = [
    ":deno",
    ":deno_core_http_bench",
    ":deno_core_http_bench_test",
    ":deno_core_test",
    ":snapshot_creator",
  ]
}

group("deno_core_deps") {
  deps = [
    "libdeno:libdeno_static_lib",
    "libdeno:v8",
  ]
}

# deno does not depend on flatbuffers nor tokio.
main_extern_rlib = [
  "futures",
  "libc",
  "serde_json",
  "log",
  "url",
]

rust_rlib("deno") {
  source_root = "lib.rs"
  deps = [
    ":deno_core_deps",
  ]
  extern_rlib = main_extern_rlib
}

rust_test("deno_core_test") {
  source_root = "lib.rs"
  deps = [
    ":deno_core_deps",
  ]
  extern_rlib = main_extern_rlib
}

http_bench_extern = [
  {
    label = ":deno"
    crate_name = "deno"
    crate_type = "rlib"
  },
]
http_bench_extern_rlib = [
  "futures",
  "lazy_static",
  "libc",
  "log",
  "tokio",
]
if (is_win) {
  http_bench_extern_rlib += [ "winapi" ]
}

rust_executable("deno_core_http_bench") {
  source_root = "examples/http_bench.rs"
  deps = [
    ":deno_core_deps",
  ]
  extern = http_bench_extern
  extern_rlib = http_bench_extern_rlib
}

rust_test("deno_core_http_bench_test") {
  source_root = "examples/http_bench.rs"
  deps = [
    ":deno_core_deps",
  ]
  extern = http_bench_extern
  extern_rlib = http_bench_extern_rlib
}

rust_executable("snapshot_creator") {
  source_root = "snapshot_creator.rs"
  extern = [
    {
      label = ":deno"
      crate_name = "deno"
      crate_type = "rlib"
    },
  ]
}
