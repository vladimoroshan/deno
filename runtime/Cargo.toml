# Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.

[package]
name = "deno_runtime"
version = "0.13.0"
license = "MIT"
authors = ["the Deno authors"]
edition = "2018"
description = "Provides the deno runtime library"
repository = "https://github.com/denoland/deno"

[lib]
name = "deno_runtime"
path = "lib.rs"

[[example]]
name = "hello_runtime"
path = "examples/hello_runtime.rs"

[build-dependencies]
deno_console = { path = "../op_crates/console", version = "0.5.0" }
deno_core = { path = "../core", version = "0.86.0" }
deno_crypto = { path = "../op_crates/crypto", version = "0.19.0" }
deno_fetch = { path = "../op_crates/fetch", version = "0.27.0" }
deno_file = { path = "../op_crates/file", version = "0.4.0" }
deno_timers = { path = "../op_crates/timers", version = "0.3.0" }
deno_url = { path = "../op_crates/url", version = "0.5.0" }
deno_web = { path = "../op_crates/web", version = "0.35.0" }
deno_webgpu = { path = "../op_crates/webgpu", version = "0.6.0" }
deno_webidl = { path = "../op_crates/webidl", version = "0.5.0" }
deno_websocket = { path = "../op_crates/websocket", version = "0.10.0" }

[target.'cfg(windows)'.build-dependencies]
winres = "0.1.11"
winapi = "0.3.9"

[dependencies]
deno_console = { path = "../op_crates/console", version = "0.5.0" }
deno_core = { path = "../core", version = "0.86.0" }
deno_crypto = { path = "../op_crates/crypto", version = "0.19.0" }
deno_fetch = { path = "../op_crates/fetch", version = "0.27.0" }
deno_file = { path = "../op_crates/file", version = "0.4.0" }
deno_timers = { path = "../op_crates/timers", version = "0.3.0" }
deno_url = { path = "../op_crates/url", version = "0.5.0" }
deno_web = { path = "../op_crates/web", version = "0.35.0" }
deno_webgpu = { path = "../op_crates/webgpu", version = "0.6.0" }
deno_webidl = { path = "../op_crates/webidl", version = "0.5.0" }
deno_websocket = { path = "../op_crates/websocket", version = "0.10.0" }

atty = "0.2.14"
bytes = "1"
dlopen = "0.1.8"
encoding_rs = "0.8.28"
filetime = "0.2.14"
http = "0.2.3"
hyper = { version = "0.14.5", features = ["server", "stream", "http1", "http2", "runtime"] }
indexmap = "1.6.2"
lazy_static = "1.4.0"
libc = "0.2.93"
log = "0.4.14"
notify = "5.0.0-pre.7"
percent-encoding = "2.1.0"
regex = "1.4.3"
ring = "0.16.20"
serde = { version = "1.0.125", features = ["derive"] }
sys-info = "0.9.0"
termcolor = "1.1.2"
tokio = { version = "1.4.0", features = ["full"] }
tokio-util = { version = "0.6", features = ["io"] }
tokio-rustls = "0.22.0"
uuid = { version = "0.8.2", features = ["v4"] }
webpki = "0.21.4"
webpki-roots = "0.21.1"
trust-dns-proto = "0.20.1"
trust-dns-resolver = { version = "0.20.1", features = ["tokio-runtime", "serde-config"] }

[target.'cfg(windows)'.dependencies]
fwdansi = "1.1.0"
winapi = { version = "0.3.9", features = ["knownfolders", "mswsock", "objbase", "shlobj", "tlhelp32", "winbase", "winerror", "winsock2"] }

[target.'cfg(unix)'.dependencies]
nix = "0.20.0"

[dev-dependencies]
# Used in benchmark
test_util = { path = "../test_util" }
