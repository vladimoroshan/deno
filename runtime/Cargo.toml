# Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.

[package]
name = "deno_runtime"
version = "0.24.0"
authors = ["the Deno authors"]
edition = "2018"
license = "MIT"
repository = "https://github.com/denoland/deno"
description = "Provides the deno runtime library"

[features]
# "fake" feature that allows to generate docs on docs.rs
docsrs = []

[lib]
name = "deno_runtime"
path = "lib.rs"

[[example]]
name = "hello_runtime"
path = "examples/hello_runtime.rs"

[build-dependencies]
deno_broadcast_channel = { version = "0.10.0", path = "../ext/broadcast_channel" }
deno_console = { version = "0.16.0", path = "../ext/console" }
deno_core = { version = "0.98.0", path = "../core" }
deno_crypto = { version = "0.30.0", path = "../ext/crypto" }
deno_fetch = { version = "0.39.0", path = "../ext/fetch" }
deno_ffi = { version = "0.3.0", path = "../ext/ffi" }
deno_http = { version = "0.7.0", path = "../ext/http" }
deno_net = { version = "0.7.0", path = "../ext/net" }
deno_timers = { version = "0.14.0", path = "../ext/timers" }
deno_tls = { version = "0.3.0", path = "../ext/tls" }
deno_url = { version = "0.16.0", path = "../ext/url" }
deno_web = { version = "0.47.0", path = "../ext/web" }
deno_webgpu = { version = "0.17.0", path = "../ext/webgpu" }
deno_webidl = { version = "0.16.0", path = "../ext/webidl" }
deno_websocket = { version = "0.21.0", path = "../ext/websocket" }
deno_webstorage = { version = "0.11.0", path = "../ext/webstorage" }

[target.'cfg(windows)'.build-dependencies]
winres = "0.1.11"
winapi = "0.3.9"

[dependencies]
deno_broadcast_channel = { version = "0.10.0", path = "../ext/broadcast_channel" }
deno_console = { version = "0.16.0", path = "../ext/console" }
deno_core = { version = "0.98.0", path = "../core" }
deno_crypto = { version = "0.30.0", path = "../ext/crypto" }
deno_fetch = { version = "0.39.0", path = "../ext/fetch" }
deno_ffi = { version = "0.3.0", path = "../ext/ffi" }
deno_http = { version = "0.7.0", path = "../ext/http" }
deno_net = { version = "0.7.0", path = "../ext/net" }
deno_timers = { version = "0.14.0", path = "../ext/timers" }
deno_tls = { version = "0.3.0", path = "../ext/tls" }
deno_url = { version = "0.16.0", path = "../ext/url" }
deno_web = { version = "0.47.0", path = "../ext/web" }
deno_webgpu = { version = "0.17.0", path = "../ext/webgpu" }
deno_webidl = { version = "0.16.0", path = "../ext/webidl" }
deno_websocket = { version = "0.21.0", path = "../ext/websocket" }
deno_webstorage = { version = "0.11.0", path = "../ext/webstorage" }

atty = "0.2.14"
dlopen = "0.1.8"
encoding_rs = "0.8.28"
filetime = "0.2.14"
http = "0.2.4"
hyper = { version = "0.14.10", features = ["server", "stream", "http1", "http2", "runtime"] }
# TODO(lucacasonato): unlock when https://github.com/tkaitchuck/aHash/issues/95 is resolved
indexmap = "=1.6.2"
lazy_static = "1.4.0"
libc = "0.2.98"
log = "0.4.14"
notify = "=5.0.0-pre.10"
percent-encoding = "2.1.0"
regex = "1.4.3"
ring = "0.16.20"
serde = { version = "1.0.126", features = ["derive"] }
sys-info = "0.9.0"
termcolor = "1.1.2"
tokio = { version = "1.8.1", features = ["full"] }
uuid = { version = "0.8.2", features = ["v4"] }

[target.'cfg(windows)'.dependencies]
fwdansi = "1.1.0"
winapi = { version = "0.3.9", features = ["knownfolders", "mswsock", "objbase", "shlobj", "tlhelp32", "winbase", "winerror", "winsock2"] }

[target.'cfg(unix)'.dependencies]
nix = "0.20.0"

[dev-dependencies]
# Used in benchmark
test_util = { path = "../test_util" }

[package.metadata.docs.rs]
features = ["docsrs"]
