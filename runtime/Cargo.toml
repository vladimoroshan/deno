# Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.

[package]
name = "deno_runtime"
version = "0.18.1"
license = "MIT"
authors = ["the Deno authors"]
edition = "2018"
description = "Provides the deno runtime library"
repository = "https://github.com/denoland/deno"

[lib]
name = "deno_runtime"
path = "lib.rs"

[[example]]
name = "hello_runtime"
path = "examples/hello_runtime.rs"

[build-dependencies]
deno_broadcast_channel = { version = "0.4.1", path = "../extensions/broadcast_channel" }
deno_console = { version = "0.10.1", path = "../extensions/console" }
deno_core = { version = "0.92.0", path = "../core" }
deno_crypto = { version = "0.24.1", path = "../extensions/crypto" }
deno_fetch = { version = "0.32.1", path = "../extensions/fetch" }
deno_net = { version = "0.1.0", path = "../extensions/net" }
deno_timers = { version = "0.8.1", path = "../extensions/timers" }
deno_url = { version = "0.10.1", path = "../extensions/url" }
deno_web = { version = "0.41.1", path = "../extensions/web" }
deno_webgpu = { version = "0.11.1", path = "../extensions/webgpu" }
deno_webidl = { version = "0.10.1", path = "../extensions/webidl" }
deno_websocket = { version = "0.15.1", path = "../extensions/websocket" }
deno_webstorage = { version = "0.5.1", path = "../extensions/webstorage" }

[target.'cfg(windows)'.build-dependencies]
winres = "0.1.11"
winapi = "0.3.9"

[dependencies]
deno_broadcast_channel = { version = "0.4.1", path = "../extensions/broadcast_channel" }
deno_console = { version = "0.10.1", path = "../extensions/console" }
deno_core = { version = "0.92.0", path = "../core" }
deno_crypto = { version = "0.24.1", path = "../extensions/crypto" }
deno_fetch = { version = "0.32.1", path = "../extensions/fetch" }
deno_net = { version = "0.1.0", path = "../extensions/net" }
deno_timers = { version = "0.8.1", path = "../extensions/timers" }
deno_url = { version = "0.10.1", path = "../extensions/url" }
deno_web = { version = "0.41.1", path = "../extensions/web" }
deno_webgpu = { version = "0.11.1", path = "../extensions/webgpu" }
deno_webidl = { version = "0.10.1", path = "../extensions/webidl" }
deno_websocket = { version = "0.15.1", path = "../extensions/websocket" }
deno_webstorage = { version = "0.5.1", path = "../extensions/webstorage" }

atty = "0.2.14"
dlopen = "0.1.8"
encoding_rs = "0.8.28"
filetime = "0.2.14"
http = "0.2.3"
hyper = { version = "0.14.9", features = ["server", "stream", "http1", "http2", "runtime"] }
indexmap = "1.6.2"
lazy_static = "1.4.0"
libc = "0.2.93"
log = "0.4.14"
notify = "5.0.0-pre.7"
percent-encoding = "2.1.0"
regex = "1.4.3"
ring = "0.16.20"
serde = { version = "1.0.125", features = ["derive"] }
sys-info = "0.9.0"
termcolor = "1.1.2"
tokio = { version = "1.8.0", features = ["full"] }
uuid = { version = "0.8.2", features = ["v4"] }

[target.'cfg(windows)'.dependencies]
fwdansi = "1.1.0"
winapi = { version = "0.3.9", features = ["knownfolders", "mswsock", "objbase", "shlobj", "tlhelp32", "winbase", "winerror", "winsock2"] }

[target.'cfg(unix)'.dependencies]
nix = "0.20.0"

[dev-dependencies]
# Used in benchmark
test_util = { path = "../test_util" }
